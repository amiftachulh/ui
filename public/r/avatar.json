{
  "name": "avatar",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-avatar"
  ],
  "files": [
    {
      "path": "registry/default/ui/avatar.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { avatar } from \"styled-system/recipes\";\n\nconst { withProvider, withContext } = createStyleContext(avatar);\n\nconst Avatar = withProvider(AvatarPrimitive.Root, \"root\");\nconst AvatarImage = withContext(AvatarPrimitive.Image, \"image\");\nconst AvatarFallback = withContext(AvatarPrimitive.Fallback, \"fallback\");\n\nexport { Avatar, AvatarFallback, AvatarImage };\n"
    },
    {
      "path": "registry/default/slot-recipes/avatar.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const avatarSlotRecipe = defineSlotRecipe({\n  className: \"avatar\",\n  slots: [\"root\", \"image\", \"fallback\"],\n  base: {\n    root: {\n      pos: \"relative\",\n      display: \"flex\",\n      w: \"8\",\n      h: \"8\",\n      flexShrink: \"0\",\n      overflow: \"hidden\",\n      rounded: \"full\",\n    },\n\n    image: {\n      aspectRatio: \"square\",\n      w: \"full\",\n      h: \"full\",\n      objectFit: \"cover\",\n    },\n\n    fallback: {\n      display: \"flex\",\n      w: \"full\",\n      h: \"full\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      rounded: \"full\",\n      bg: \"muted\",\n    },\n  },\n});\n"
    }
  ]
}