{
  "name": "breadcrumb",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "registry/default/ui/breadcrumb.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuChevronRight, LuEllipsis } from \"react-icons/lu\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { css } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { breadcrumb } from \"styled-system/recipes\";\n\nconst { withProvider, withContext } = createStyleContext(breadcrumb);\n\nfunction Root(props: React.ComponentProps<\"nav\">) {\n  return <nav aria-label=\"breadcrumb\" {...props} />;\n}\nconst Breadcrumb = withProvider(Root, \"root\");\nconst BreadcrumbList = withContext(\"ol\", \"list\");\nconst BreadcrumbItem = withContext(\"li\", \"item\");\n\nfunction Link({ asChild, ...props }: React.ComponentProps<\"a\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"a\";\n  return <Comp {...props} />;\n}\nconst BreadcrumbLink = withContext(Link, \"link\");\n\nfunction Page(props: React.ComponentProps<\"span\">) {\n  return <span role=\"link\" aria-disabled aria-current=\"page\" {...props} />;\n}\nconst BreadcrumbPage = withContext(Page, \"page\");\n\nfunction Separator({ children, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li role=\"presentation\" aria-hidden {...props}>\n      {children ?? <LuChevronRight />}\n    </li>\n  );\n}\nconst BreadcrumbSeparator = withContext(Separator, \"separator\");\n\nfunction Ellipsis(props: React.ComponentProps<\"span\">) {\n  return (\n    <span role=\"presentation\" aria-hidden {...props}>\n      <LuEllipsis className={css({ w: \"4\", h: \"4\" })} />\n      <span className={css({ srOnly: true })}>More</span>\n    </span>\n  );\n}\nconst BreadcrumbEllipsis = withContext(Ellipsis, \"ellipsis\");\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/breadcrumb.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const breadcrumbSlotRecipe = defineSlotRecipe({\n  className: \"breadcrumb\",\n  slots: [\"root\", \"list\", \"item\", \"link\", \"page\", \"separator\", \"ellipsis\"],\n  base: {\n    list: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\",\n      gap: \"1.5\",\n      overflowWrap: \"break-word\",\n      textStyle: \"sm\",\n      color: \"muted.fg\",\n      sm: {\n        gap: \"2.5\",\n      },\n    },\n\n    item: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      gap: \"1.5\",\n    },\n\n    link: {\n      transition: \"colors\",\n      _hover: {\n        color: \"fg\",\n      },\n    },\n\n    page: {\n      fontWeight: \"normal\",\n      color: \"fg\",\n    },\n\n    separator: {\n      \"& > svg\": {\n        w: \"3.5\",\n        h: \"3.5\",\n      },\n    },\n\n    ellipsis: {\n      display: \"flex\",\n      w: \"9\",\n      h: \"9\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n});\n"
    }
  ]
}