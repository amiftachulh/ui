{
  "name": "calendar-20",
  "type": "registry:block",
  "description": "With time presets",
  "registryDependencies": [
    "calendar",
    "card",
    "button"
  ],
  "files": [
    {
      "path": "registry/default/blocks/calendar-20.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Calendar } from \"@/registry/default/ui/calendar\";\nimport { Card, CardContent, CardFooter } from \"@/registry/default/ui/card\";\n\nexport default function Calendar20() {\n  const [date, setDate] = React.useState<Date | undefined>(new Date(2025, 5, 12));\n  const [selectedTime, setSelectedTime] = React.useState<string | null>(\"10:00\");\n  const timeSlots = Array.from({ length: 37 }, (_, i) => {\n    const totalMinutes = i * 15;\n    const hour = Math.floor(totalMinutes / 60) + 9;\n    const minute = totalMinutes % 60;\n    return `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n  });\n\n  const bookedDates = Array.from({ length: 3 }, (_, i) => new Date(2025, 5, 17 + i));\n\n  return (\n    <styled.div\n      css={{\n        w: \"full\",\n        bg: \"surface\",\n        minW: \"0\",\n        minH: \"svh\",\n        display: \"flex\",\n        px: \"4\",\n        py: \"12\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        md: { py: \"20\" },\n      }}\n    >\n      <Card css={{ gap: \"0\", p: \"0\" }}>\n        <CardContent css={{ pos: \"relative\", p: \"0\", md: { pr: \"48\" } }}>\n          <styled.div css={{ p: \"6\" }}>\n            <Calendar\n              mode=\"single\"\n              selected={date}\n              onSelect={setDate}\n              defaultMonth={date}\n              disabled={bookedDates}\n              showOutsideDays={false}\n              modifiers={{\n                booked: bookedDates,\n              }}\n              modifiersClassNames={{\n                booked: css({ \"& > button\": { textDecoration: \"line-through\", opacity: 1 } }),\n              }}\n              css={{\n                bg: \"transparent\",\n                p: \"0\",\n                \"--cell-size\": \"2.5rem\",\n                md: {\n                  \"--cell-size\": \"3rem\",\n                },\n              }}\n              formatters={{\n                formatWeekdayName: (date) => {\n                  return date.toLocaleString(\"en-US\", { weekday: \"short\" });\n                },\n              }}\n            />\n          </styled.div>\n          <styled.div\n            css={{\n              scrollbar: \"hidden\",\n              insetY: \"0\",\n              right: \"0\",\n              display: \"flex\",\n              maxH: \"72\",\n              w: \"full\",\n              scrollPaddingBottom: \"6\",\n              flexDir: \"column\",\n              gap: \"4\",\n              overflowY: \"auto\",\n              borderTopWidth: \"1px\",\n              p: \"6\",\n              md: {\n                pos: \"absolute\",\n                maxH: \"none\",\n                w: \"48\",\n                borderTopWidth: \"0\",\n                borderLeftWidth: \"1px\",\n              },\n            }}\n          >\n            <styled.div css={{ display: \"grid\", gap: \"2\" }}>\n              {timeSlots.map((time) => (\n                <Button\n                  key={time}\n                  variant={selectedTime === time ? \"primary\" : \"outline\"}\n                  onClick={() => setSelectedTime(time)}\n                  css={{ w: \"full\", shadow: \"none\" }}\n                >\n                  {time}\n                </Button>\n              ))}\n            </styled.div>\n          </styled.div>\n        </CardContent>\n        <CardFooter\n          css={{\n            display: \"flex\",\n            flexDir: \"column\",\n            gap: \"4\",\n            borderTopWidth: \"1px\",\n            px: \"6\",\n            py: \"5!\",\n            md: { flexDir: \"row\" },\n          }}\n        >\n          <styled.div css={{ textStyle: \"sm\" }}>\n            {date && selectedTime ? (\n              <>\n                Your meeting is booked for{\" \"}\n                <styled.span css={{ fontWeight: \"medium\" }}>\n                  {\" \"}\n                  {date?.toLocaleDateString(\"en-US\", {\n                    weekday: \"long\",\n                    day: \"numeric\",\n                    month: \"long\",\n                  })}{\" \"}\n                </styled.span>\n                at <styled.span css={{ fontWeight: \"medium\" }}>{selectedTime}</styled.span>.\n              </>\n            ) : (\n              <>Select a date and time for your meeting.</>\n            )}\n          </styled.div>\n          <Button\n            disabled={!date || !selectedTime}\n            css={{ w: \"full\", md: { ml: \"auto\", w: \"auto\" } }}\n            variant=\"outline\"\n          >\n            Continue\n          </Button>\n        </CardFooter>\n      </Card>\n    </styled.div>\n  );\n}\n"
    }
  ],
  "meta": {
    "iframeHeight": "600px",
    "mobile": "component"
  },
  "categories": [
    "calendar",
    "date"
  ]
}