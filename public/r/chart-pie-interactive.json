{
  "name": "chart-pie-interactive",
  "type": "registry:block",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "registry/default/charts/chart-pie-interactive.tsx",
      "type": "registry:block",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Label, Pie, PieChart, Sector } from \"recharts\";\nimport { PieSectorDataItem } from \"recharts/types/polar/Pie\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartStyle,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/registry/default/ui/chart\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\";\n\nexport const description = \"An interactive pie chart\";\n\nconst desktopData = [\n  { month: \"january\", desktop: 186, fill: \"var(--color-january)\" },\n  { month: \"february\", desktop: 305, fill: \"var(--color-february)\" },\n  { month: \"march\", desktop: 237, fill: \"var(--color-march)\" },\n  { month: \"april\", desktop: 173, fill: \"var(--color-april)\" },\n  { month: \"may\", desktop: 209, fill: \"var(--color-may)\" },\n];\n\nconst chartConfig = {\n  visitors: {\n    label: \"Visitors\",\n  },\n  desktop: {\n    label: \"Desktop\",\n  },\n  mobile: {\n    label: \"Mobile\",\n  },\n  january: {\n    label: \"January\",\n    color: \"var(--colors-chart-1)\",\n  },\n  february: {\n    label: \"February\",\n    color: \"var(--colors-chart-2)\",\n  },\n  march: {\n    label: \"March\",\n    color: \"var(--colors-chart-3)\",\n  },\n  april: {\n    label: \"April\",\n    color: \"var(--colors-chart-4)\",\n  },\n  may: {\n    label: \"May\",\n    color: \"var(--colors-chart-5)\",\n  },\n} satisfies ChartConfig;\n\nexport function ChartPieInteractive() {\n  const id = \"pie-interactive\";\n  const [activeMonth, setActiveMonth] = React.useState(desktopData[0].month);\n\n  const activeIndex = React.useMemo(\n    () => desktopData.findIndex((item) => item.month === activeMonth),\n    [activeMonth]\n  );\n  const months = React.useMemo(() => desktopData.map((item) => item.month), []);\n\n  return (\n    <Card data-chart={id} css={{ display: \"flex\", flexDir: \"column\" }}>\n      <ChartStyle id={id} config={chartConfig} />\n      <CardHeader css={{ flexDir: \"row\", alignItems: \"flex-start\", pb: \"0\" }}>\n        <styled.div css={{ display: \"grid\", gap: \"1\" }}>\n          <CardTitle>Pie Chart - Interactive</CardTitle>\n          <CardDescription>January - June 2024</CardDescription>\n        </styled.div>\n        <Select value={activeMonth} onValueChange={setActiveMonth}>\n          <SelectTrigger\n            css={{ ml: \"auto\", h: \"7\", w: \"130px\", rounded: \"lg\", pl: \"2.5\" }}\n            aria-label=\"Select a value\"\n          >\n            <SelectValue placeholder=\"Select month\" />\n          </SelectTrigger>\n          <SelectContent align=\"end\" css={{ rounded: \"xl\" }}>\n            {months.map((key) => {\n              const config = chartConfig[key as keyof typeof chartConfig];\n\n              if (!config) {\n                return null;\n              }\n\n              return (\n                <SelectItem\n                  key={key}\n                  value={key}\n                  css={{ rounded: \"lg\", \"& span\": { display: \"flex\" } }}\n                >\n                  <styled.div\n                    css={{ display: \"flex\", alignItems: \"center\", gap: \"2\", textStyle: \"xs\" }}\n                  >\n                    <styled.span\n                      css={{ display: \"flex\", w: \"3\", h: \"3\", flexShrink: \"0\", rounded: \"xs\" }}\n                      style={{\n                        backgroundColor: `var(--color-${key})`,\n                      }}\n                    />\n                    {config?.label}\n                  </styled.div>\n                </SelectItem>\n              );\n            })}\n          </SelectContent>\n        </Select>\n      </CardHeader>\n      <CardContent css={{ display: \"flex\", flex: \"1\", justifyContent: \"center\", pb: \"0\" }}>\n        <ChartContainer\n          id={id}\n          config={chartConfig}\n          css={{ mx: \"auto\", aspectRatio: \"square\", w: \"full\", maxW: \"300px\" }}\n        >\n          <PieChart>\n            <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />\n            <Pie\n              data={desktopData}\n              dataKey=\"desktop\"\n              nameKey=\"month\"\n              innerRadius={60}\n              strokeWidth={5}\n              activeIndex={activeIndex}\n              activeShape={({ outerRadius = 0, ...props }: PieSectorDataItem) => (\n                <g>\n                  <Sector {...props} outerRadius={outerRadius + 10} />\n                  <Sector\n                    {...props}\n                    outerRadius={outerRadius + 25}\n                    innerRadius={outerRadius + 12}\n                  />\n                </g>\n              )}\n            >\n              <Label\n                content={({ viewBox }) => {\n                  if (viewBox && \"cx\" in viewBox && \"cy\" in viewBox) {\n                    return (\n                      <text\n                        x={viewBox.cx}\n                        y={viewBox.cy}\n                        textAnchor=\"middle\"\n                        dominantBaseline=\"middle\"\n                      >\n                        <styled.tspan\n                          x={viewBox.cx}\n                          y={viewBox.cy}\n                          css={{ fill: \"fg\", textStyle: \"3xl\", fontWeight: \"bold\" }}\n                        >\n                          {desktopData[activeIndex].desktop.toLocaleString()}\n                        </styled.tspan>\n                        <styled.tspan\n                          x={viewBox.cx}\n                          y={(viewBox.cy || 0) + 24}\n                          css={{ fill: \"muted.fg\" }}\n                        >\n                          Visitors\n                        </styled.tspan>\n                      </text>\n                    );\n                  }\n                }}\n              />\n            </Pie>\n          </PieChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"
    }
  ],
  "categories": [
    "charts",
    "charts-pie"
  ]
}