{
  "name": "chart-tooltip-advanced",
  "type": "registry:block",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "registry/default/charts/chart-tooltip-advanced.tsx",
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { Bar, BarChart, XAxis } from \"recharts\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/registry/default/ui/chart\";\n\nexport const description = \"A stacked bar chart with a legend\";\n\nconst chartData = [\n  { date: \"2024-07-15\", running: 450, swimming: 300 },\n  { date: \"2024-07-16\", running: 380, swimming: 420 },\n  { date: \"2024-07-17\", running: 520, swimming: 120 },\n  { date: \"2024-07-18\", running: 140, swimming: 550 },\n  { date: \"2024-07-19\", running: 600, swimming: 350 },\n  { date: \"2024-07-20\", running: 480, swimming: 400 },\n];\n\nconst chartConfig = {\n  running: {\n    label: \"Running\",\n    color: \"var(--colors-chart-1)\",\n  },\n  swimming: {\n    label: \"Swimming\",\n    color: \"var(--colors-chart-2)\",\n  },\n} satisfies ChartConfig;\n\nexport function ChartTooltipAdvanced() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Tooltip - Advanced</CardTitle>\n        <CardDescription>Tooltip with custom formatter and total.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart accessibilityLayer data={chartData}>\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n              tickFormatter={(value) => {\n                return new Date(value).toLocaleDateString(\"en-US\", {\n                  weekday: \"short\",\n                });\n              }}\n            />\n            <Bar dataKey=\"running\" stackId=\"a\" fill=\"var(--color-running)\" radius={[0, 0, 4, 4]} />\n            <Bar\n              dataKey=\"swimming\"\n              stackId=\"a\"\n              fill=\"var(--color-swimming)\"\n              radius={[4, 4, 0, 0]}\n            />\n            <ChartTooltip\n              content={\n                <ChartTooltipContent\n                  hideLabel\n                  className={css({ w: \"180px\" })}\n                  formatter={(value, name, item, index) => (\n                    <>\n                      <styled.div\n                        css={{\n                          w: \"2.5\",\n                          h: \"2.5\",\n                          flexShrink: \"0\",\n                          rounded: \"2px\",\n                          bg: \"var(--clr-bg)\",\n                        }}\n                        style={\n                          {\n                            \"--clr-bg\": `var(--color-${name})`,\n                          } as React.CSSProperties\n                        }\n                      />\n                      {chartConfig[name as keyof typeof chartConfig]?.label || name}\n                      <styled.div\n                        css={{\n                          color: \"fg\",\n                          ml: \"auto\",\n                          display: \"flex\",\n                          alignItems: \"baseline\",\n                          gap: \"0.5\",\n                          fontFamily: \"mono\",\n                          fontWeight: \"medium\",\n                          fontVariantNumeric: \"tabular-nums\",\n                        }}\n                      >\n                        {value}\n                        <styled.span css={{ color: \"muted.fg\", fontWeight: \"normal\" }}>\n                          kcal\n                        </styled.span>\n                      </styled.div>\n                      {/* Add this after the last item */}\n                      {index === 1 && (\n                        <styled.div\n                          css={{\n                            color: \"fg\",\n                            mt: \"1.5\",\n                            display: \"flex\",\n                            flexBasis: \"full\",\n                            alignItems: \"center\",\n                            borderTopWidth: \"1px\",\n                            pt: \"1.5\",\n                            textStyle: \"xs\",\n                            fontWeight: \"medium\",\n                          }}\n                        >\n                          Total\n                          <styled.div\n                            css={{\n                              color: \"fg\",\n                              ml: \"auto\",\n                              display: \"flex\",\n                              alignItems: \"baseline\",\n                              gap: \"0.5\",\n                              fontFamily: \"mono\",\n                              fontWeight: \"medium\",\n                              fontVariantNumeric: \"tabular-nums\",\n                            }}\n                          >\n                            {item.payload.running + item.payload.swimming}\n                            <styled.span css={{ color: \"muted.fg\", fontWeight: \"normal\" }}>\n                              kcal\n                            </styled.span>\n                          </styled.div>\n                        </styled.div>\n                      )}\n                    </>\n                  )}\n                />\n              }\n              cursor={false}\n              defaultIndex={1}\n            />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"
    }
  ],
  "categories": [
    "charts",
    "charts-tooltip"
  ]
}