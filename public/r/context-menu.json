{
  "name": "context-menu",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-context-menu"
  ],
  "files": [
    {
      "path": "registry/default/ui/context-menu.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuCheck, LuChevronRight, LuCircle } from \"react-icons/lu\";\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\";\nimport { css } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { contextMenu } from \"styled-system/recipes\";\n\nconst { withRootProvider, withContext } = createStyleContext(contextMenu);\n\nconst ContextMenu = withRootProvider(ContextMenuPrimitive.Root);\nconst ContextMenuTrigger = withContext(ContextMenuPrimitive.Trigger, \"trigger\");\nconst ContextMenuGroup = withContext(ContextMenuPrimitive.Group, \"group\");\nconst ContextMenuPortal = ContextMenuPrimitive.Portal;\nconst ContextMenuSub = ContextMenuPrimitive.Sub;\nconst ContextMenuRadioGroup = withContext(ContextMenuPrimitive.RadioGroup, \"radioGroup\");\n\nfunction SubTrigger({\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.SubTrigger> & { inset?: boolean }) {\n  return (\n    <ContextMenuPrimitive.SubTrigger data-inset={inset} {...props}>\n      {children}\n      <LuChevronRight className={css({ ml: \"auto\" })} />\n    </ContextMenuPrimitive.SubTrigger>\n  );\n}\nconst ContextMenuSubTrigger = withContext(SubTrigger, \"subTrigger\");\n\nconst ContextMenuSubContent = withContext(ContextMenuPrimitive.SubContent, \"subContent\");\n\nfunction Content(props: React.ComponentProps<typeof ContextMenuPrimitive.Content>) {\n  return (\n    <ContextMenuPrimitive.Portal>\n      <ContextMenuPrimitive.Content {...props} />\n    </ContextMenuPrimitive.Portal>\n  );\n}\nconst ContextMenuContent = withContext(Content, \"content\");\n\nfunction Item({\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"danger\";\n}) {\n  return <ContextMenuPrimitive.Item data-inset={inset} data-variant={variant} {...props} />;\n}\nconst ContextMenuItem = withContext(Item, \"item\");\n\nfunction CheckboxItem({\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.CheckboxItem>) {\n  return (\n    <ContextMenuPrimitive.CheckboxItem {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <ContextMenuPrimitive.ItemIndicator>\n          <LuCheck />\n        </ContextMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </ContextMenuPrimitive.CheckboxItem>\n  );\n}\nconst ContextMenuCheckboxItem = withContext(CheckboxItem, \"checkboxItem\");\n\nfunction RadioItem({\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.RadioItem>) {\n  return (\n    <ContextMenuPrimitive.RadioItem {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <ContextMenuPrimitive.ItemIndicator>\n          <LuCircle className={css({ w: \"2\", h: \"2\", fill: \"current\" })} />\n        </ContextMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </ContextMenuPrimitive.RadioItem>\n  );\n}\nconst ContextMenuRadioItem = withContext(RadioItem, \"radioItem\");\n\nfunction Label({\n  inset,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Label> & { inset?: boolean }) {\n  return <ContextMenuPrimitive.Label data-inset={inset} {...props} />;\n}\nconst ContextMenuLabel = withContext(Label, \"label\");\n\nconst ContextMenuSeparator = withContext(ContextMenuPrimitive.Separator, \"separator\");\nconst ContextMenuShortcut = withContext(\"span\", \"shortcut\");\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuRadioGroup,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/context-menu.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const contextMenuSlotRecipe = defineSlotRecipe({\n  className: \"context-menu\",\n  slots: [\n    \"root\",\n    \"trigger\",\n    \"subTrigger\",\n    \"group\",\n    \"content\",\n    \"subContent\",\n    \"item\",\n    \"checkboxItem\",\n    \"radioGroup\",\n    \"radioItem\",\n    \"label\",\n    \"separator\",\n    \"shortcut\",\n  ],\n  base: {\n    content: {\n      bg: \"popover\",\n      color: \"popover.fg\",\n      zIndex: \"50\",\n      minW: \"8rem\",\n      maxH: \"var(--radix-context-menu-content-available-height)\",\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      p: \"1\",\n      shadow: \"md\",\n      transformOrigin: \"var(--radix-context-menu-content-transform-origin)\",\n      animateIn: true,\n      fadeIn: \"80\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n\n    subTrigger: {\n      display: \"flex\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      alignItems: \"center\",\n      rounded: \"sm\",\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _open: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        pointerEvents: \"none\",\n        flexShrink: \"0\",\n      },\n    },\n\n    subContent: {\n      bg: \"popover\",\n      color: \"popover.fg\",\n      zIndex: \"50\",\n      minW: \"8rem\",\n      overflow: \"hidden\",\n      rounded: \"md\",\n      borderWidth: \"1px\",\n      p: \"1\",\n      shadow: \"lg\",\n      transformOrigin: \"var(--radix-context-menu-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n\n    item: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      px: \"2\",\n      py: \"1.5\",\n      rounded: \"sm\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n      \"&[data-variant=danger]\": {\n        color: \"danger\",\n        _focus: {\n          bg: \"danger/10\",\n          color: \"danger\",\n        },\n        \"* svg\": {\n          color: \"danger!\",\n        },\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        pointerEvents: \"none\",\n        flexShrink: \"0\",\n      },\n      _dark: {\n        \"&[data-variant=danger]\": {\n          _focus: {\n            bg: \"danger/20\",\n          },\n        },\n      },\n    },\n\n    checkboxItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      cursor: \"default\",\n      gap: \"2\",\n      userSelect: \"none\",\n      rounded: \"sm\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        pointerEvents: \"none\",\n        flexShrink: \"0\",\n      },\n    },\n\n    radioItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      rounded: \"sm\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        pointerEvents: \"none\",\n        flexShrink: \"0\",\n      },\n    },\n\n    label: {\n      px: \"2\",\n      py: \"1.5\",\n      color: \"fg\",\n      textStyle: \"sm\",\n      fontWeight: \"semibold\",\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n    },\n\n    separator: {\n      mx: \"-1\",\n      my: \"1\",\n      h: \"1px\",\n      bg: \"border\",\n    },\n\n    shortcut: {\n      ml: \"auto\",\n      textStyle: \"xs\",\n      letterSpacing: \"widest\",\n      color: \"muted.fg\",\n    },\n  },\n});\n"
    }
  ]
}