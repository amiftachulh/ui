{
  "name": "date-picker-form",
  "type": "registry:example",
  "dependencies": [
    "dayjs"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "popover"
  ],
  "files": [
    {
      "path": "registry/default/examples/date-picker-form.tsx",
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { Controller, useForm } from \"react-hook-form\";\nimport { LuCalendar } from \"react-icons/lu\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport dayjs from \"dayjs\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { z } from \"zod\";\nimport { toast } from \"@/registry/default/hooks/use-toast\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Calendar } from \"@/registry/default/ui/calendar\";\nimport { Field, FieldDescription, FieldError, FieldLabel } from \"@/registry/default/ui/field\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/registry/default/ui/popover\";\n\nconst formSchema = z.object({\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n});\n\ntype FormSchema = z.infer<typeof formSchema>;\n\nexport default function DatePickerForm() {\n  const form = useForm<FormSchema>({\n    resolver: zodResolver(formSchema),\n  });\n\n  const onSubmit = form.handleSubmit((data) => {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <styled.pre\n          css={{ mt: \"2\", w: \"340px\", rounded: \"md\", bg: \"slate.950\", p: \"4\", borderWidth: \"1px\" }}\n        >\n          <styled.code css={{ color: \"white\" }}>{JSON.stringify(data, null, 2)}</styled.code>\n        </styled.pre>\n      ),\n    });\n  });\n\n  return (\n    <styled.form onSubmit={onSubmit} css={{ spaceY: \"8\" }}>\n      <Controller\n        control={form.control}\n        name=\"dob\"\n        render={({ field, fieldState }) => (\n          <Field data-invalid={fieldState.invalid}>\n            <FieldLabel>Date of birth</FieldLabel>\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  css={{\n                    w: \"240px\",\n                    pl: \"3\",\n                    textAlign: \"left\",\n                    fontWeight: \"normal\",\n                    color: !field.value ? \"muted.fg\" : undefined,\n                  }}\n                >\n                  {field.value ? dayjs(field.value).format(\"YYYY-MM-DD\") : <span>Pick a date</span>}\n                  <LuCalendar className={css({ ml: \"auto\", h: \"4\", w: \"4\", opacity: \"0.5\" })} />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent css={{ w: \"auto\", p: \"0\" }} align=\"start\">\n                <Calendar\n                  mode=\"single\"\n                  selected={field.value}\n                  onSelect={field.onChange}\n                  disabled={(date) => date > new Date() || date < new Date(\"1900-01-01\")}\n                  autoFocus\n                />\n              </PopoverContent>\n            </Popover>\n            <FieldDescription>Your date of birth is used to calculate your age.</FieldDescription>\n            <FieldError>{fieldState.error?.message}</FieldError>\n          </Field>\n        )}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </styled.form>\n  );\n}\n"
    }
  ]
}