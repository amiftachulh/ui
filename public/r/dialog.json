{
  "name": "dialog",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "registry/default/ui/dialog.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuX } from \"react-icons/lu\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { css } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { dialog } from \"styled-system/recipes\";\n\nconst { withRootProvider, withContext } = createStyleContext(dialog);\n\nconst Dialog = withRootProvider(DialogPrimitive.Root);\nconst DialogTrigger = withContext(DialogPrimitive.Trigger, \"trigger\");\nconst DialogPortal = DialogPrimitive.Portal;\nconst DialogOverlay = withContext(DialogPrimitive.Overlay, \"overlay\");\nconst DialogClose = withContext(DialogPrimitive.Close, \"close\");\n\nfunction Content({\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & { showCloseButton?: boolean }) {\n  return (\n    <DialogPortal>\n      <DialogOverlay />\n      <DialogPrimitive.Content {...props}>\n        {children}\n        {showCloseButton && (\n          <DialogClose\n            css={{\n              pos: \"absolute\",\n              top: \"4\",\n              right: \"4\",\n              opacity: \"0.7\",\n              transition: \"opacity\",\n              rounded: \"xs\",\n              _hover: {\n                opacity: \"1\",\n              },\n              _focusVisible: {\n                outlineWidth: \"2px\",\n                outlineColor: \"ring\",\n                outlineOffset: \"2px\",\n              },\n              _disabled: {\n                pointerEvents: \"none\",\n              },\n              _open: {\n                bg: \"accent\",\n                color: \"accent.fg\",\n              },\n              \"& svg\": {\n                w: \"4\",\n                h: \"4\",\n                flexShrink: \"0\",\n                pointerEvents: \"none\",\n              },\n            }}\n          >\n            <LuX />\n            <span className={css({ srOnly: true })}>Close</span>\n          </DialogClose>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n}\nconst DialogContent = withContext(Content, \"content\");\n\nconst DialogHeader = withContext(\"div\", \"header\");\nconst DialogTitle = withContext(DialogPrimitive.Title, \"title\");\nconst DialogDescription = withContext(DialogPrimitive.Description, \"description\");\nconst DialogFooter = withContext(\"div\", \"footer\");\n\nexport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogOverlay,\n  DialogClose,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/dialog.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const dialogSlotRecipe = defineSlotRecipe({\n  className: \"dialog\",\n  slots: [\"trigger\", \"overlay\", \"content\", \"header\", \"title\", \"description\", \"footer\", \"close\"],\n  base: {\n    overlay: {\n      pos: \"fixed\",\n      inset: \"0\",\n      zIndex: \"50\",\n      bg: \"black/50\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n      },\n    },\n\n    content: {\n      pos: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      zIndex: \"50\",\n      display: \"grid\",\n      gap: \"4\",\n      w: \"full\",\n      maxW: \"calc(100% - 2rem)\",\n      bg: \"bg\",\n      p: \"6\",\n      borderWidth: \"1px\",\n      rounded: \"lg\",\n      shadow: \"lg\",\n      transform: \"translate(-50%, -50%)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n        slideInFromLeft: \"50%\",\n        slideInFromTop: \"48%\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n        slideOutToLeft: \"50%\",\n        slideOutToTop: \"48%\",\n      },\n      sm: {\n        maxW: \"lg\",\n      },\n    },\n\n    header: {\n      display: \"flex\",\n      flexDir: \"column\",\n      gap: \"2\",\n      textAlign: \"center\",\n      sm: {\n        textAlign: \"left\",\n      },\n    },\n\n    title: {\n      textStyle: \"lg\",\n      fontWeight: \"semibold\",\n      lineHeight: \"none\",\n    },\n\n    description: {\n      color: \"muted.fg\",\n      textStyle: \"sm\",\n    },\n\n    footer: {\n      display: \"flex\",\n      flexDir: \"column-reverse\",\n      gap: \"2\",\n      sm: {\n        flexDir: \"row\",\n        justifyContent: \"flex-end\",\n      },\n    },\n  },\n});\n"
    }
  ]
}