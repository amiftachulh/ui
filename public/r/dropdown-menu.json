{
  "name": "dropdown-menu",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/default/ui/dropdown-menu.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuCheck, LuChevronRight, LuCircle } from \"react-icons/lu\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { css } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { dropdownMenu } from \"styled-system/recipes\";\n\nconst { withRootProvider, withContext } = createStyleContext(dropdownMenu);\n\nconst DropdownMenu = withRootProvider(DropdownMenuPrimitive.Root);\nconst DropdownMenuTrigger = withContext(DropdownMenuPrimitive.Trigger, \"trigger\");\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nfunction Content({\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPortal>\n      <DropdownMenuPrimitive.Content sideOffset={sideOffset} {...props} />\n    </DropdownMenuPortal>\n  );\n}\nconst DropdownMenuContent = withContext(Content, \"content\");\n\nfunction Item({\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"danger\";\n}) {\n  return <DropdownMenuPrimitive.Item data-inset={inset} data-variant={variant} {...props} />;\n}\nconst DropdownMenuItem = withContext(Item, \"item\");\n\nfunction Label({\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & { inset?: boolean }) {\n  return <DropdownMenuPrimitive.Label data-inset={inset} {...props} />;\n}\nconst DropdownMenuLabel = withContext(Label, \"label\");\n\nfunction CheckboxItem({\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <DropdownMenuPrimitive.ItemIndicator>\n          <LuCheck className={css({ w: \"4\", h: \"4\" })} />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\nconst DropdownMenuCheckboxItem = withContext(CheckboxItem, \"checkboxItem\");\n\nfunction RadioItem({\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <DropdownMenuPrimitive.ItemIndicator>\n          <LuCircle className={css({ w: \"2\", h: \"2\", fill: \"current\" })} />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\nconst DropdownMenuRadioItem = withContext(RadioItem, \"radioItem\");\n\nconst DropdownMenuSeparator = withContext(DropdownMenuPrimitive.Separator, \"separator\");\nconst DropdownMenuShortcut = withContext(\"span\", \"shortcut\");\n\nfunction SubTrigger({\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & { inset?: boolean }) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger data-inset={inset} {...props}>\n      {children}\n      <LuChevronRight className={css({ ml: \"auto\" })} />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\nconst DropdownMenuSubTrigger = withContext(SubTrigger, \"subTrigger\");\n\nfunction SubContent(props: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return <DropdownMenuPrimitive.SubContent {...props} />;\n}\nconst DropdownMenuSubContent = withContext(SubContent, \"subContent\");\nconst DropdownMenuGroup = withContext(DropdownMenuPrimitive.Group, \"group\");\nconst DropdownMenuRadioGroup = withContext(DropdownMenuPrimitive.RadioGroup, \"radioGroup\");\nconst DropdownMenuSub = withContext(DropdownMenuPrimitive.Sub, \"sub\");\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  DropdownMenuGroup,\n  DropdownMenuRadioGroup,\n  DropdownMenuSub,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/dropdown-menu.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const dropdownMenuSlotRecipe = defineSlotRecipe({\n  className: \"dropdown-menu\",\n  slots: [\n    \"root\",\n    \"trigger\",\n    \"portal\",\n    \"content\",\n    \"item\",\n    \"group\",\n    \"label\",\n    \"checkboxItem\",\n    \"radioGroup\",\n    \"radioItem\",\n    \"separator\",\n    \"sub\",\n    \"subTrigger\",\n    \"subContent\",\n    \"shortcut\",\n  ],\n  base: {\n    content: {\n      zIndex: \"50\",\n      minW: \"8rem\",\n      maxH: \"var(--radix-dropdown-menu-content-available-height)\",\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n      p: \"1\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"md\",\n      transformOrigin: \"var(--radix-dropdown-menu-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _close: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n\n    item: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      rounded: \"sm\",\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      transition: \"colors\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n      \"&[data-variant=danger]\": {\n        color: \"danger\",\n        _focus: {\n          bg: \"danger/10\",\n          color: \"danger\",\n          _dark: {\n            bg: \"danger/20\",\n          },\n        },\n        \"& svg\": {\n          color: \"danger!\",\n        },\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        color: \"muted.fg\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    label: {\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      fontWeight: \"medium\",\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n    },\n\n    checkboxItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      rounded: \"sm\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      outline: \"none\",\n      transition: \"colors\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    radioItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      alignItems: \"center\",\n      rounded: \"sm\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      transition: \"colors\",\n      _focus: {\n        bg: \"secondary\",\n        color: \"secondary.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n    },\n\n    separator: {\n      mx: \"-1\",\n      my: \"1\",\n      h: \"1px\",\n      bg: \"border\",\n    },\n\n    shortcut: {\n      ml: \"auto\",\n      color: \"muted.fg\",\n      textStyle: \"xs\",\n      letterSpacing: \"widest\",\n    },\n\n    subTrigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      rounded: \"sm\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _open: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        color: \"muted.fg\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    subContent: {\n      zIndex: \"50\",\n      minW: \"8rem\",\n      overflow: \"hidden\",\n      p: \"1\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"lg\",\n      transformOrigin: \"var(--radix-dropdown-menu-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _close: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n  },\n});\n"
    }
  ]
}