{
  "name": "form-tanstack-select",
  "type": "registry:example",
  "dependencies": [
    "@tanstack/react-form",
    "zod"
  ],
  "registryDependencies": [
    "field",
    "select",
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/default/examples/form-tanstack-select.tsx",
      "type": "registry:example",
      "content": "/* eslint-disable react/no-children-prop */\n\"use client\";\n\nimport { useForm } from \"@tanstack/react-form\";\nimport { toast } from \"sonner\";\nimport { styled } from \"styled-system/jsx\";\nimport * as z from \"zod\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\";\nimport {\n  Field,\n  FieldContent,\n  FieldDescription,\n  FieldError,\n  FieldGroup,\n  FieldLabel,\n} from \"@/registry/default/ui/field\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\";\n\nconst spokenLanguages = [\n  { label: \"English\", value: \"en\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"German\", value: \"de\" },\n  { label: \"Italian\", value: \"it\" },\n  { label: \"Chinese\", value: \"zh\" },\n  { label: \"Japanese\", value: \"ja\" },\n] as const;\n\nconst formSchema = z.object({\n  language: z\n    .string()\n    .min(1, \"Please select your spoken language.\")\n    .refine((val) => val !== \"auto\", {\n      message: \"Auto-detection is not allowed. Please select a specific language.\",\n    }),\n});\n\nexport default function FormTanstackSelect() {\n  const form = useForm({\n    defaultValues: {\n      language: \"\",\n    },\n    validators: {\n      onSubmit: formSchema,\n    },\n    onSubmit: async ({ value }) => {\n      toast(\"You submitted the following values:\", {\n        description: (\n          <styled.pre\n            css={{\n              mt: \"2\",\n              w: \"320px\",\n              overflowX: \"auto\",\n              rounded: \"md\",\n              bg: \"slate.950\",\n              p: \"4\",\n              borderWidth: \"1px\",\n            }}\n          >\n            <code>{JSON.stringify(value, null, 2)}</code>\n          </styled.pre>\n        ),\n      });\n    },\n  });\n\n  return (\n    <Card css={{ w: \"full\", sm: { maxW: \"lg\" } }}>\n      <CardHeader>\n        <CardTitle>Language Preferences</CardTitle>\n        <CardDescription>Select your preferred spoken language.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form\n          id=\"form-tanstack-select\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            form.handleSubmit();\n          }}\n        >\n          <FieldGroup>\n            <form.Field\n              name=\"language\"\n              children={(field) => {\n                const isInvalid = field.state.meta.isTouched && !field.state.meta.isValid;\n                return (\n                  <Field orientation=\"responsive\" data-invalid={isInvalid}>\n                    <FieldContent>\n                      <FieldLabel htmlFor=\"form-tanstack-select-language\">\n                        Spoken Language\n                      </FieldLabel>\n                      <FieldDescription>\n                        For best results, select the language you speak.\n                      </FieldDescription>\n                      {isInvalid && <FieldError errors={field.state.meta.errors} />}\n                    </FieldContent>\n                    <Select\n                      name={field.name}\n                      value={field.state.value}\n                      onValueChange={field.handleChange}\n                    >\n                      <SelectTrigger\n                        id=\"form-tanstack-select-language\"\n                        aria-invalid={isInvalid}\n                        css={{ minW: \"120px\" }}\n                      >\n                        <SelectValue placeholder=\"Select\" />\n                      </SelectTrigger>\n                      <SelectContent position=\"item-aligned\">\n                        <SelectItem value=\"auto\">Auto</SelectItem>\n                        <SelectSeparator />\n                        {spokenLanguages.map((language) => (\n                          <SelectItem key={language.value} value={language.value}>\n                            {language.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </Field>\n                );\n              }}\n            />\n          </FieldGroup>\n        </form>\n      </CardContent>\n      <CardFooter>\n        <Field orientation=\"horizontal\">\n          <Button type=\"button\" variant=\"outline\" onClick={() => form.reset()}>\n            Reset\n          </Button>\n          <Button type=\"submit\" form=\"form-tanstack-select\">\n            Save\n          </Button>\n        </Field>\n      </CardFooter>\n    </Card>\n  );\n}\n"
    }
  ]
}