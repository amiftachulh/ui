{
  "name": "hover-card",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-hover-card"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/hover-card.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\";\nimport { hoverCard } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withRootProvider, withContext } = createStyleContext(hoverCard);\n\nconst HoverCard = withRootProvider(HoverCardPrimitive.Root);\nconst HoverCardTrigger = withContext(HoverCardPrimitive.Trigger, \"trigger\");\n\nfunction Content({\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof HoverCardPrimitive.Content>) {\n  return <HoverCardPrimitive.Content align={align} sideOffset={sideOffset} {...props} />;\n}\nconst HoverCardContent = withContext(Content, \"content\");\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent };\n"
    },
    {
      "path": "src/registry/default/slot-recipes/hover-card.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const hoverCardSlotRecipe = defineSlotRecipe({\n  className: \"hover-card\",\n  slots: [\"root\", \"trigger\", \"content\"],\n  base: {\n    content: {\n      zIndex: \"50\",\n      w: \"64\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      p: \"4\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"md\",\n      outline: \"none\",\n      transformOrigin: \"var(--radix-hover-card-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n  },\n});\n"
    }
  ]
}