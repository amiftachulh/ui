{
  "name": "input-group",
  "type": "registry:ui",
  "registryDependencies": [
    "button",
    "input",
    "textarea"
  ],
  "files": [
    {
      "path": "registry/default/ui/input-group.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { cva, cx, type RecipeVariantProps } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { inputGroup } from \"styled-system/recipes\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Textarea } from \"@/registry/default/ui/textarea\";\nimport { Input } from \"./input\";\n\nconst { withProvider, withContext } = createStyleContext(inputGroup);\n\nconst InputGroup = withProvider(\"div\", \"root\", {\n  defaultProps: {\n    role: \"group\",\n  },\n});\n\nfunction Addon({\n  align = \"inline-start\",\n  ...props\n}: React.ComponentPropsWithoutRef<\"div\"> & {\n  align?: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n}) {\n  return (\n    <div\n      role=\"group\"\n      data-align={align}\n      onClick={(e) => {\n        if ((e.target as HTMLElement).closest(\"button\")) {\n          return;\n        }\n        e.currentTarget.parentElement?.querySelector(\"input\")?.focus();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst InputGroupAddon = withContext(Addon, \"addon\");\n\nconst inputGroupButtonVariants = cva({\n  base: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"2\",\n    textStyle: \"sm\",\n    shadow: \"none\",\n  },\n  variants: {\n    size: {\n      xs: {\n        h: \"6\",\n        gap: \"1\",\n        px: \"2\",\n        \"& > svg\": {\n          w: \"3.5\",\n          h: \"3.5\",\n        },\n        \"&:has(> svg)\": {\n          px: \"2\",\n        },\n      },\n      sm: {\n        h: \"8\",\n        px: \"2.5\",\n        gap: \"1.5\",\n        rounded: \"md\",\n        \"&:has(> svg)\": {\n          px: \"2.5\",\n        },\n      },\n      \"icon-xs\": {\n        w: \"6\",\n        h: \"6\",\n        p: \"0\",\n        \"&:has(> svg)\": {\n          p: \"0\",\n        },\n      },\n      \"icon-sm\": {\n        w: \"8\",\n        h: \"8\",\n        p: \"0\",\n        \"&:has(> svg)\": {\n          p: \"0\",\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"xs\",\n  },\n});\n\nfunction InputGroupButton({\n  className,\n  type = \"button\",\n  variant = \"ghost\",\n  size = \"xs\",\n  ...props\n}: Omit<React.ComponentProps<typeof Button>, \"size\"> &\n  RecipeVariantProps<typeof inputGroupButtonVariants>) {\n  return (\n    <Button\n      type={type}\n      variant={variant}\n      className={cx(inputGroupButtonVariants({ size }), className)}\n      {...props}\n    />\n  );\n}\n\nconst InputGroupText = withContext(\"span\", \"text\");\n\nfunction InputGroupInput({ css, ...props }: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"input-group-control\"\n      css={{\n        flex: \"1\",\n        rounded: \"0\",\n        borderWidth: \"0\",\n        bg: \"transparent\",\n        shadow: \"none\",\n        _focusVisible: {\n          outlineWidth: \"0\",\n        },\n        _dark: {\n          bg: \"transparent\",\n        },\n        ...css,\n      }}\n      {...props}\n    />\n  );\n}\n\nfunction InputGroupTextarea({ css, ...props }: React.ComponentProps<typeof Textarea>) {\n  return (\n    <Textarea\n      data-slot=\"input-group-control\"\n      css={{\n        flex: \"1\",\n        resize: \"none\",\n        rounded: \"none\",\n        borderWidth: \"0\",\n        bg: \"transparent\",\n        py: \"3\",\n        shadow: \"none\",\n        _focusVisible: {\n          outlineWidth: \"0\",\n        },\n        _dark: {\n          bg: \"transparent\",\n        },\n        ...css,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButton,\n  InputGroupText,\n  InputGroupInput,\n  InputGroupTextarea,\n};\n"
    }
  ]
}