{
  "name": "input-otp",
  "type": "registry:ui",
  "dependencies": [
    "input-otp"
  ],
  "files": [
    {
      "path": "registry/default/ui/input-otp.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuMinus } from \"react-icons/lu\";\nimport { OTPInput, OTPInputContext } from \"input-otp\";\nimport { css, cx } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { inputOtp } from \"styled-system/recipes\";\nimport { SystemStyleObject } from \"styled-system/types\";\n\nconst classes = inputOtp();\n\nconst StyledOTPInput = styled(OTPInput);\n\nfunction InputOTP({\n  containerCss,\n  ...props\n}: React.ComponentProps<typeof StyledOTPInput> & {\n  containerCss?: SystemStyleObject;\n}) {\n  return (\n    <StyledOTPInput\n      data-slot=\"input-otp\"\n      containerClassName={cx(classes.container, css(containerCss))}\n      className={classes.root}\n      {...props}\n    />\n  );\n}\n\nfunction InputOTPGroup(props: React.ComponentProps<typeof styled.div>) {\n  return <styled.div data-slot=\"input-otp-group\" className={classes.group} {...props} />;\n}\n\nfunction InputOTPSlot({\n  index,\n  ...props\n}: React.ComponentProps<typeof styled.div> & { index: number }) {\n  const inputOTPContext = React.useContext(OTPInputContext);\n  const { char, hasFakeCaret, isActive } = inputOTPContext?.slots[index] ?? {};\n\n  return (\n    <styled.div\n      data-slot=\"input-otp-slot\"\n      data-active={isActive}\n      className={classes.slot}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <styled.div\n          css={{\n            pointerEvents: \"none\",\n            pos: \"absolute\",\n            inset: \"0\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <styled.div css={{ animation: \"caret-blink\", bg: \"fg\", w: \"1px\", h: \"4\" }} />\n        </styled.div>\n      )}\n    </styled.div>\n  );\n}\n\nfunction InputOTPSeparator(props: React.ComponentProps<typeof styled.div>) {\n  return (\n    <styled.div data-slot=\"input-otp-separator\" role=\"separator\" {...props}>\n      <LuMinus />\n    </styled.div>\n  );\n}\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator };\n"
    },
    {
      "path": "registry/default/slot-recipes/input-otp.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const inputOtpSlotRecipe = defineSlotRecipe({\n  className: \"input-otp\",\n  slots: [\"container\", \"root\", \"group\", \"slot\", \"separator\"],\n  base: {\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      \"&:has(:disabled)\": {\n        opacity: \"0.5\",\n      },\n    },\n\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      \"&:has(:disabled)\": {\n        opacity: \"0.5\",\n      },\n    },\n\n    separator: {\n      _disabled: {\n        cursor: \"not-allowed\",\n      },\n    },\n\n    group: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n\n    slot: {\n      pos: \"relative\",\n      display: \"flex\",\n      w: \"9\",\n      h: \"9\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderBlockWidth: \"1px\",\n      borderRightWidth: \"1px\",\n      borderColor: \"input\",\n      textStyle: \"sm\",\n      shadow: \"xs\",\n      transition: \"all\",\n      outlineColor: \"transparent\",\n      \"&[data-active=true]\": {\n        borderColor: \"ring\",\n        outlineWidth: \"3px\",\n        outlineStyle: \"solid\",\n        outlineColor: \"ring/50\",\n        zIndex: \"10\",\n        \"&[aria-invalid=true]\": {\n          borderColor: \"danger\",\n          outlineColor: \"danger/20\",\n          _dark: {\n            outlineColor: \"danger/40\",\n          },\n        },\n      },\n      _first: {\n        borderLeftWidth: \"1px\",\n        roundedLeft: \"md\",\n      },\n      _last: {\n        roundedRight: \"md\",\n      },\n      _dark: {\n        bg: \"input/30\",\n      },\n    },\n  },\n});\n"
    }
  ]
}