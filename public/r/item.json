{
  "name": "item",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registryDependencies": [
    "separator"
  ],
  "files": [
    {
      "path": "registry/default/ui/item.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { item } from \"styled-system/recipes\";\nimport { Separator } from \"@/registry/default/ui/separator\";\n\nconst { withProvider, withContext } = createStyleContext(item);\n\nconst ItemGroup = withProvider(\"div\", \"group\", { defaultProps: { role: \"list\" } });\n\nfunction ItemSeparator({ css, ...props }: React.ComponentProps<typeof Separator>) {\n  return <Separator orientation=\"horizontal\" css={{ my: \"0\", ...css }} {...props} />;\n}\n\nfunction Root({\n  variant = \"default\",\n  size = \"default\",\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  variant?: \"default\" | \"outline\" | \"muted\";\n  size?: \"default\" | \"sm\";\n  asChild?: boolean;\n}) {\n  const Comp = asChild ? Slot : \"div\";\n  return <Comp data-variant={variant} data-size={size} {...props} />;\n}\nconst Item = withProvider(Root, \"root\");\n\nfunction Media({\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<\"div\"> & { variant?: \"default\" | \"icon\" | \"image\" }) {\n  return <div data-variant={variant} {...props} />;\n}\nconst ItemMedia = withContext(Media, \"media\");\n\nconst ItemContent = withContext(\"div\", \"content\");\nconst ItemTitle = withContext(\"div\", \"title\");\nconst ItemDescription = withContext(\"p\", \"description\");\nconst ItemActions = withContext(\"div\", \"actions\");\nconst ItemHeader = withContext(\"div\", \"header\");\nconst ItemFooter = withContext(\"div\", \"footer\");\n\nexport {\n  Item,\n  ItemMedia,\n  ItemContent,\n  ItemActions,\n  ItemGroup,\n  ItemSeparator,\n  ItemTitle,\n  ItemDescription,\n  ItemHeader,\n  ItemFooter,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/item.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const itemSlotRecipes = defineSlotRecipe({\n  className: \"item\",\n  slots: [\n    \"group\",\n    \"separator\",\n    \"root\",\n    \"media\",\n    \"content\",\n    \"title\",\n    \"description\",\n    \"actions\",\n    \"header\",\n    \"footer\",\n  ],\n  base: {\n    group: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n\n    separator: {},\n\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      borderWidth: \"1px\",\n      borderColor: \"transparent\",\n      textStyle: \"sm\",\n      rounded: \"md\",\n      transition: \"colors\",\n      outlineColor: \"transparent\",\n      _focusVisible: {\n        borderColor: \"ring\",\n        outlineWidth: \"3px\",\n        outlineStyle: \"solid\",\n        outlineColor: \"ring/50\",\n      },\n      \"&:is(a)\": {\n        transition: \"colors\",\n        transitionDuration: \"fast\",\n        _hover: {\n          bg: \"accent/50\",\n        },\n      },\n      \"&[data-variant=default]\": {\n        bg: \"transparent\",\n      },\n      \"&[data-variant=outline]\": {\n        borderColor: \"border\",\n      },\n      \"&[data-variant=muted]\": {\n        bg: \"muted/50\",\n      },\n      \"&[data-size=default]\": {\n        p: \"4\",\n        gap: \"4\",\n      },\n      \"&[data-size=sm]\": {\n        px: \"4\",\n        py: \"3\",\n        gap: \"2.5\",\n      },\n    },\n\n    media: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      gap: \"2\",\n      flexShrink: \"0\",\n      \".item__root:has(.item__description) &\": {\n        alignSelf: \"flex-start\",\n        transform: \"translateY(0.125rem)\",\n      },\n      \"& svg\": {\n        pointerEvents: \"none\",\n      },\n      \"&[data-variant=default]\": {\n        bg: \"transparent\",\n      },\n      \"&[data-variant=icon]\": {\n        bg: \"muted\",\n        w: \"8\",\n        h: \"8\",\n        borderWidth: \"1px\",\n        rounded: \"sm\",\n        \"& svg\": {\n          w: \"4\",\n          h: \"4\",\n        },\n      },\n      \"&[data-variant=image]\": {\n        w: \"10\",\n        h: \"10\",\n        rounded: \"sm\",\n        overflow: \"hidden\",\n        \"& img\": {\n          w: \"full\",\n          h: \"full\",\n          objectFit: \"cover\",\n        },\n      },\n    },\n\n    content: {\n      display: \"flex\",\n      flex: \"1\",\n      flexDir: \"column\",\n      gap: \"1\",\n      \"& + .item__content\": {\n        flex: \"none\",\n      },\n    },\n\n    title: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      w: \"fit\",\n      textStyle: \"sm\",\n      lineHeight: \"snug\",\n      fontWeight: \"medium\",\n    },\n\n    description: {\n      color: \"muted.fg\",\n      lineClamp: \"2\",\n      textStyle: \"sm\",\n      lineHeight: \"normal\",\n      fontWeight: \"normal\",\n      textWrap: \"balance\",\n      \"& > a\": {\n        textDecoration: \"underline\",\n        textUnderlineOffset: \"4px\",\n        _hover: {\n          color: \"primary\",\n        },\n      },\n    },\n\n    actions: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n    },\n\n    header: {\n      display: \"flex\",\n      flexBasis: \"full\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      gap: \"2\",\n    },\n\n    footer: {\n      display: \"flex\",\n      flexBasis: \"full\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      gap: \"2\",\n    },\n  },\n});\n"
    }
  ]
}