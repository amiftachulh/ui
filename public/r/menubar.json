{
  "name": "menubar",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-menubar"
  ],
  "files": [
    {
      "path": "registry/default/ui/menubar.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuCheck, LuChevronRight, LuCircle } from \"react-icons/lu\";\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\";\nimport { css } from \"styled-system/css\";\nimport { menubar } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(menubar);\n\nconst Menubar = withProvider(MenubarPrimitive.Root, \"root\");\nconst MenubarMenu = MenubarPrimitive.Menu;\nconst MenubarGroup = withContext(MenubarPrimitive.Group, \"group\");\nconst MenubarPortal = MenubarPrimitive.Portal;\nconst MenubarRadioGroup = withContext(MenubarPrimitive.RadioGroup, \"radioGroup\");\nconst MenubarTrigger = withContext(MenubarPrimitive.Trigger, \"trigger\");\n\nfunction Content({\n  align = \"start\",\n  alignOffset = -4,\n  sideOffset = 8,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Content>) {\n  return (\n    <MenubarPortal>\n      <MenubarPrimitive.Content\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        {...props}\n      />\n    </MenubarPortal>\n  );\n}\nconst MenubarContent = withContext(Content, \"content\");\n\nfunction Item({\n  inset,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Item> & { inset?: boolean }) {\n  return <MenubarPrimitive.Item data-inset={inset} {...props} />;\n}\nconst MenubarItem = withContext(Item, \"item\");\n\nfunction CheckboxItem({\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.CheckboxItem>) {\n  return (\n    <MenubarPrimitive.CheckboxItem checked={checked} {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <MenubarPrimitive.ItemIndicator>\n          <LuCheck className={css({ w: \"4\", h: \"4\" })} />\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </MenubarPrimitive.CheckboxItem>\n  );\n}\nconst MenubarCheckboxItem = withContext(CheckboxItem, \"checkboxItem\");\n\nfunction RadioItem({\n  children,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioItem>) {\n  return (\n    <MenubarPrimitive.RadioItem {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          left: \"2\",\n          display: \"flex\",\n          w: \"3.5\",\n          h: \"3.5\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          pointerEvents: \"none\",\n        })}\n      >\n        <MenubarPrimitive.ItemIndicator>\n          <LuCircle className={css({ w: \"2\", h: \"2\", fill: \"current\" })} />\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </MenubarPrimitive.RadioItem>\n  );\n}\nconst MenubarRadioItem = withContext(RadioItem, \"radioItem\");\n\nfunction Label({\n  inset,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Label> & { inset?: boolean }) {\n  return <MenubarPrimitive.Label data-inset={inset} {...props} />;\n}\nconst MenubarLabel = withContext(Label, \"label\");\n\nconst MenubarSeparator = withContext(MenubarPrimitive.Separator, \"separator\");\nconst MenubarShortcut = withContext(\"span\", \"shortcut\");\nconst MenubarSub = MenubarPrimitive.Sub;\n\nfunction SubTrigger({\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.SubTrigger> & { inset?: boolean }) {\n  return (\n    <MenubarPrimitive.SubTrigger data-inset={inset} {...props}>\n      {children}\n      <LuChevronRight className={css({ ml: \"auto\", w: \"4\", h: \"4\" })} />\n    </MenubarPrimitive.SubTrigger>\n  );\n}\nconst MenubarSubTrigger = withContext(SubTrigger, \"subTrigger\");\n\nconst MenubarSubContent = withContext(MenubarPrimitive.SubContent, \"subContent\");\n\nexport {\n  Menubar,\n  MenubarPortal,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarGroup,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarItem,\n  MenubarShortcut,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarSub,\n  MenubarSubTrigger,\n  MenubarSubContent,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/menubar.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const menubarSlotRecipe = defineSlotRecipe({\n  className: \"menubar\",\n  slots: [\n    \"root\",\n    \"group\",\n    \"portal\",\n    \"radioGroup\",\n    \"trigger\",\n    \"content\",\n    \"item\",\n    \"checkboxItem\",\n    \"radioItem\",\n    \"itemIndicator\",\n    \"label\",\n    \"separator\",\n    \"shortcut\",\n    \"sub\",\n    \"subTrigger\",\n    \"subContent\",\n  ],\n  base: {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"1\",\n      h: \"9\",\n      p: \"1\",\n      bg: \"bg\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"xs\",\n    },\n\n    trigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      px: \"2\",\n      py: \"1\",\n      textStyle: \"sm\",\n      fontWeight: \"medium\",\n      rounded: \"sm\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      outline: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _open: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n    },\n\n    content: {\n      zIndex: 50,\n      minW: \"12rem\",\n      overflow: \"hidden\",\n      p: \"1\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"md\",\n      transformOrigin: \"var(--radix-menubar-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n\n    item: {\n      position: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      rounded: \"sm\",\n      outline: \"none\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n      \"&[data-variant=danger]\": {\n        color: \"danger\",\n        _focus: {\n          bg: \"danger/10\",\n          color: \"danger\",\n        },\n        _dark: {\n          _focus: {\n            bg: \"danger/20\",\n          },\n        },\n        \"* svg\": {\n          color: \"danger!\",\n        },\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        color: \"muted.fg\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    checkboxItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      rounded: \"xs\",\n      outline: \"none\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    radioItem: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      rounded: \"xs\",\n      outline: \"none\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        pointerEvents: \"none\",\n      },\n    },\n\n    label: {\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      fontWeight: \"medium\",\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n    },\n\n    separator: {\n      mx: \"-1\",\n      my: \"1\",\n      h: \"1px\",\n      bg: \"border\",\n    },\n\n    shortcut: {\n      ml: \"auto\",\n      color: \"muted.fg\",\n      textStyle: \"xs\",\n      letterSpacing: \"widest\",\n    },\n\n    subTrigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      px: \"2\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      rounded: \"sm\",\n      outline: \"none\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      _open: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      \"&[data-inset=true]\": {\n        pl: \"8\",\n      },\n    },\n\n    subContent: {\n      zIndex: \"50\",\n      minW: \"8rem\",\n      overflow: \"hidden\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      p: \"1\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"lg\",\n      transformOrigin: \"var(--radix-menubar-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n  },\n});\n"
    }
  ]
}