{
  "name": "navigation-menu",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-navigation-menu"
  ],
  "files": [
    {
      "path": "registry/default/ui/navigation-menu.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuChevronDown } from \"react-icons/lu\";\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\";\nimport { css } from \"styled-system/css\";\nimport { navigationMenu } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(navigationMenu);\n\nfunction Viewport(props: React.ComponentProps<typeof NavigationMenuPrimitive.Viewport>) {\n  return (\n    <div\n      className={css({\n        pos: \"absolute\",\n        top: \"100%\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n      })}\n    >\n      <NavigationMenuPrimitive.Viewport {...props} />\n    </div>\n  );\n}\nconst NavigationMenuViewport = withContext(Viewport, \"viewport\");\n\nfunction Root({\n  children,\n  viewport = true,\n  ...props\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Root> & { viewport?: boolean }) {\n  return (\n    <NavigationMenuPrimitive.Root data-viewport={viewport} {...props}>\n      {children}\n      {viewport && <NavigationMenuViewport />}\n    </NavigationMenuPrimitive.Root>\n  );\n}\nconst NavigationMenu = withProvider(Root, \"root\");\n\nconst NavigationMenuList = withContext(NavigationMenuPrimitive.List, \"list\");\nconst NavigationMenuItem = withContext(NavigationMenuPrimitive.Item, \"item\");\n\nfunction Trigger({\n  children,\n  ...props\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Trigger>) {\n  return (\n    <NavigationMenuPrimitive.Trigger {...props}>\n      {children}\n      <LuChevronDown />\n    </NavigationMenuPrimitive.Trigger>\n  );\n}\nconst NavigationMenuTrigger = withContext(Trigger, \"trigger\");\n\nconst NavigationMenuContent = withContext(NavigationMenuPrimitive.Content, \"content\");\nconst NavigationMenuLink = withContext(NavigationMenuPrimitive.Link, \"link\");\n\nfunction Indicator({ ...props }: React.ComponentProps<typeof NavigationMenuPrimitive.Indicator>) {\n  return (\n    <NavigationMenuPrimitive.Indicator {...props}>\n      <div\n        className={css({\n          position: \"relative\",\n          top: \"70%\",\n          h: \"2\",\n          w: \"2\",\n          transform: \"rotate(45deg)\",\n          roundedTopLeft: \"sm\",\n          bg: \"popover\",\n          shadow: \"md\",\n          borderWidth: \"1px\",\n        })}\n      />\n    </NavigationMenuPrimitive.Indicator>\n  );\n}\nconst NavigationMenuIndicator = withContext(Indicator, \"indicator\");\n\nexport {\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuContent,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/navigation-menu.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const navigationMenuSlotRecipe = defineSlotRecipe({\n  className: \"navigation-menu\",\n  slots: [\"root\", \"list\", \"item\", \"trigger\", \"content\", \"link\", \"viewport\", \"indicator\"],\n  base: {\n    root: {\n      pos: \"relative\",\n      zIndex: \"10\",\n      display: \"flex\",\n      maxW: \"max\",\n      flex: \"1\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n\n    list: {\n      display: \"flex\",\n      flex: \"1\",\n      listStyleType: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      gap: \"1\",\n    },\n\n    item: {\n      pos: \"relative\",\n    },\n\n    trigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      gap: \"0.5\",\n      px: \"3\",\n      py: \"2\",\n      rounded: \"md\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      _hover: {\n        bg: \"accent\",\n      },\n      \"& > svg\": {\n        pos: \"relative\",\n        top: \"1px\",\n        ml: \"1\",\n        h: \"3\",\n        w: \"3\",\n        transition: \"all\",\n        transitionDuration: \"normal\",\n      },\n      _open: {\n        _hover: {\n          \"& > svg\": {\n            transform: \"rotate(180deg)\",\n          },\n        },\n      },\n    },\n\n    link: {\n      display: \"block\",\n      textDecoration: \"none\",\n      px: \"3\",\n      py: \"2\",\n      rounded: \"md\",\n      outline: \"none\",\n      textStyle: \"sm\",\n      _hover: {\n        bg: \"accent\",\n      },\n    },\n\n    content: {\n      pos: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      w: \"full\",\n      \"&[data-motion^=from-]\": {\n        animateIn: true,\n        fadeIn: \"0\",\n      },\n      \"&[data-motion^=to-]\": {\n        animateOut: true,\n        fadeOut: \"0\",\n      },\n      \"&[data-motion=from-end]\": {\n        slideInFromRight: \"52\",\n      },\n      \"&[data-motion=from-start]\": {\n        slideInFromLeft: \"52\",\n      },\n      \"&[data-motion=to-end]\": {\n        slideOutToRight: \"52\",\n      },\n      \"&[data-motion=to-start]\": {\n        slideOutToLeft: \"52\",\n      },\n      md: {\n        w: \"auto\",\n      },\n      \".navigation-menu__root[data-viewport=false] &\": {\n        top: \"100%\",\n        overflow: \"hidden\",\n        mt: \"1.5\",\n        bg: \"popover\",\n        color: \"popover.fg\",\n        borderWidth: \"1px\",\n        rounded: \"md\",\n        shadow: \"md\",\n        animationDuration: \"fast\",\n        _open: {\n          animateIn: true,\n          zoomIn: \"95\",\n          fadeIn: \"0\",\n        },\n        _closed: {\n          animateOut: true,\n          zoomOut: \"95\",\n          fadeOut: \"0\",\n        },\n      },\n    },\n\n    viewport: {\n      pos: \"relative\",\n      transformOrigin: \"top center\",\n      mt: \"1.5\",\n      w: \"full\",\n      h: \"var(--radix-navigation-menu-viewport-height)\",\n      overflow: \"hidden\",\n      rounded: \"md\",\n      borderWidth: \"1px\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      shadow: \"lg\",\n      _open: {\n        animateIn: true,\n        zoomIn: \"90\",\n      },\n      _closed: {\n        animateOut: true,\n        zoomOut: \"95\",\n      },\n      md: {\n        w: \"var(--radix-navigation-menu-viewport-width)\",\n      },\n    },\n\n    indicator: {\n      top: \"100%\",\n      zIndex: \"1\",\n      display: \"flex\",\n      h: \"1.5\",\n      alignItems: \"flex-end\",\n      justifyContent: \"center\",\n      overflow: \"hidden\",\n      \"&[data-state=visible]\": {\n        animateIn: true,\n        fadeIn: \"0\",\n      },\n      \"&[data-state=hidden]\": {\n        animateOut: true,\n        fadeOut: \"0\",\n      },\n    },\n  },\n});\n"
    }
  ]
}