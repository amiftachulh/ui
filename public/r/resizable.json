{
  "name": "resizable",
  "type": "registry:ui",
  "dependencies": [
    "react-resizable-panels"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/resizable.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuGripVertical } from \"react-icons/lu\";\nimport * as ResizablePrimitive from \"react-resizable-panels\";\nimport { css } from \"styled-system/css\";\nimport { resizable } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(resizable);\n\nconst ResizablePanelGroup = withProvider(ResizablePrimitive.PanelGroup, \"panelGroup\");\nconst ResizablePanel = withContext(ResizablePrimitive.Panel, \"panel\");\n\nfunction Handle({\n  withHandle,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & { withHandle?: boolean }) {\n  return (\n    <ResizablePrimitive.PanelResizeHandle {...props}>\n      {withHandle && (\n        <div\n          className={css({\n            zIndex: \"10\",\n            w: \"3\",\n            h: \"4\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            bg: \"border\",\n            borderWidth: \"1px\",\n            rounded: \"xs\",\n          })}\n        >\n          <LuGripVertical className={css({ w: \"2.5\", h: \"2.5\" })} />\n        </div>\n      )}\n    </ResizablePrimitive.PanelResizeHandle>\n  );\n}\nconst ResizableHandle = withContext(Handle, \"handle\");\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle };\n"
    },
    {
      "path": "src/registry/default/slot-recipes/resizable.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const resizableSlotRecipe = defineSlotRecipe({\n  className: \"resizable\",\n  slots: [\"panelGroup\", \"panel\", \"handle\"],\n  base: {\n    panelGroup: {\n      display: \"flex\",\n      w: \"full\",\n      h: \"full\",\n      \"&[data-panel-group-direction=vertical]\": {\n        flexDir: \"column\",\n      },\n    },\n\n    handle: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      w: \"1px\",\n      bg: \"border\",\n      outline: \"none\",\n      _focusVisible: {\n        outlineStyle: \"solid\",\n        outlineWidth: \"1px\",\n        outlineOffset: \"1px\",\n        outlineColor: \"ring\",\n      },\n      _after: {\n        pos: \"absolute\",\n        insetY: \"0\",\n        left: \"50%\",\n        w: \"1\",\n        transform: \"translateX(-50%)\",\n      },\n      \"&[data-panel-group-direction=vertical]\": {\n        w: \"full\",\n        h: \"1px\",\n        _after: {\n          left: \"0\",\n          h: \"1\",\n          w: \"full\",\n          transform: \"translate(0%, -50%)\",\n        },\n        \"& > div\": {\n          transform: \"rotate(90deg)\",\n        },\n      },\n    },\n  },\n});\n"
    }
  ]
}