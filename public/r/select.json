{
  "name": "select",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-select"
  ],
  "files": [
    {
      "path": "registry/default/ui/select.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuCheck, LuChevronDown, LuChevronUp } from \"react-icons/lu\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { css } from \"styled-system/css\";\nimport { select } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withRootProvider, withContext } = createStyleContext(select);\n\nconst Select = withRootProvider(SelectPrimitive.Root);\nconst SelectGroup = withContext(SelectPrimitive.Group, \"group\");\nconst SelectValue = withContext(SelectPrimitive.Value, \"value\");\n\nconst Trigger = ({ children, ...props }: React.ComponentProps<typeof SelectPrimitive.Trigger>) => (\n  <SelectPrimitive.Trigger {...props}>\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <LuChevronDown className={css({ w: \"4\", h: \"4\", opacity: \"0.5\" })} />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n);\nconst SelectTrigger = withContext(Trigger, \"trigger\");\n\nfunction ScrollUpButton(props: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton {...props}>\n      <LuChevronUp className={css({ w: \"4\", h: \"4\" })} />\n    </SelectPrimitive.ScrollUpButton>\n  );\n}\nconst SelectScrollUpButton = withContext(ScrollUpButton, \"scrollUpButton\");\n\nfunction ScrollDownButton(props: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton {...props}>\n      <LuChevronDown className={css({ w: \"4\", h: \"4\" })} />\n    </SelectPrimitive.ScrollDownButton>\n  );\n}\nconst SelectScrollDownButton = withContext(ScrollDownButton, \"scrollDownButton\");\n\nfunction Content({\n  position = \"popper\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content position={position} data-position={position} {...props}>\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={css({\n            p: \"1\",\n            \"&[data-position=popper]\": {\n              w: \"full\",\n              minW: \"var(--radix-select-trigger-width)\",\n              h: \"var(--radix-select-trigger-height)\",\n              scrollMarginY: \"1\",\n            },\n          })}\n          data-position={position}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n}\nconst SelectContent = withContext(Content, \"content\");\n\nconst SelectLabel = withContext(SelectPrimitive.Label, \"label\");\n\nfunction Item({ children, ...props }: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item {...props}>\n      <span\n        className={css({\n          pos: \"absolute\",\n          right: \"2\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          w: \"3.5\",\n          h: \"3.5\",\n        })}\n      >\n        <SelectPrimitive.ItemIndicator>\n          <LuCheck className={css({ w: \"4\", h: \"4\" })} />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n}\nconst SelectItem = withContext(Item, \"item\");\n\nconst SelectSeparator = withContext(SelectPrimitive.Separator, \"separator\");\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n};\n"
    },
    {
      "path": "registry/default/slot-recipes/select.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const selectSlotRecipe = defineSlotRecipe({\n  className: \"select\",\n  slots: [\n    \"root\",\n    \"group\",\n    \"value\",\n    \"trigger\",\n    \"scrollUpButton\",\n    \"scrollDownButton\",\n    \"viewport\",\n    \"content\",\n    \"label\",\n    \"item\",\n    \"separator\",\n  ],\n  base: {\n    trigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      gap: \"2\",\n      w: \"fit\",\n      px: \"3\",\n      py: \"2\",\n      bg: \"transparent\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      borderColor: \"input\",\n      shadow: \"xs\",\n      outlineColor: \"transparent\",\n      textStyle: \"sm\",\n      whiteSpace: \"nowrap\",\n      transition: \"all\",\n      _focusVisible: {\n        borderColor: \"ring\",\n        outlineWidth: \"3px\",\n        outlineStyle: \"solid\",\n        outlineColor: \"ring/50\",\n      },\n      _disabled: {\n        cursor: \"not-allowed\",\n        opacity: \"0.5\",\n      },\n      \"&[data-placeholder]\": {\n        color: \"muted.fg\",\n      },\n      \"&[data-size=default]\": {\n        h: \"9\",\n      },\n      \"&[data-size=sm]\": {\n        h: \"8\",\n      },\n      \"&[aria-invalid=true]\": {\n        borderColor: \"danger\",\n        outlineColor: \"danger/20\",\n        _dark: {\n          outlineColor: \"danger/40\",\n        },\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        color: \"muted.fg\",\n        pointerEvents: \"none\",\n      },\n      _dark: {\n        bg: \"input/30\",\n        _hover: {\n          bg: \"input/50\",\n        },\n      },\n      \"& .select__value\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"2\",\n        lineClamp: \"1\",\n      },\n    },\n\n    content: {\n      pos: \"relative\",\n      zIndex: \"50\",\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n      minW: \"8rem\",\n      maxH: \"var(--radix-select-content-available-height)\",\n      bg: \"popover\",\n      color: \"popover.fg\",\n      borderWidth: \"1px\",\n      rounded: \"md\",\n      shadow: \"md\",\n      transformOrigin: \"var(--radix-select-content-transform-origin)\",\n      _open: {\n        animateIn: true,\n        fadeIn: \"0\",\n        zoomIn: \"95\",\n      },\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n      \"&[data-position=popper]\": {\n        \"&[data-side=top]\": {\n          transform: \"translateY(-0.25rem)\",\n        },\n        \"&[data-side=bottom]\": {\n          transform: \"translateY(0.25rem)\",\n        },\n        \"&[data-side=left]\": {\n          transform: \"translateX(-0.25rem)\",\n        },\n        \"&[data-side=right]\": {\n          transform: \"translateX(0.25rem)\",\n        },\n      },\n    },\n\n    label: {\n      px: \"2\",\n      py: \"1.5\",\n      color: \"muted.fg\",\n      textStyle: \"xs\",\n    },\n\n    item: {\n      pos: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"2\",\n      w: \"full\",\n      py: \"1.5\",\n      pl: \"2\",\n      pr: \"8\",\n      textStyle: \"sm\",\n      outline: \"none\",\n      rounded: \"sm\",\n      userSelect: \"none\",\n      cursor: \"default\",\n      _disabled: {\n        opacity: \"0.5\",\n        pointerEvents: \"none\",\n      },\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.fg\",\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n        flexShrink: \"0\",\n        color: \"muted.fg\",\n        pointerEvents: \"none\",\n      },\n      \"& span:last-child\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"2\",\n      },\n    },\n\n    separator: {\n      h: \"1px\",\n      mx: \"-1\",\n      my: \"1\",\n      bg: \"border\",\n      pointerEvents: \"none\",\n    },\n\n    scrollUpButton: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      py: \"1\",\n      cursor: \"default\",\n    },\n\n    scrollDownButton: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      py: \"1\",\n      cursor: \"default\",\n    },\n  },\n});\n"
    }
  ]
}