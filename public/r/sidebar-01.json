{
  "name": "sidebar-01",
  "type": "registry:block",
  "description": "A simple sidebar with navigation grouped by section.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "label",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-01/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { AppSidebar } from \"@/registry/default/blocks/sidebar-01/components/app-sidebar\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Separator } from \"@/registry/default/ui/separator\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <styled.header\n          css={{\n            display: \"flex\",\n            h: \"16\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n            borderBottomWidth: \"1px\",\n            px: \"4\",\n          }}\n        >\n          <SidebarTrigger css={{ ml: \"-1\" }} />\n          <Separator orientation=\"vertical\" css={{ mr: \"2\", _vertical: { h: \"4\" } }} />\n          <Breadcrumb>\n            <BreadcrumbList>\n              <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                <BreadcrumbLink href=\"#\">Building Your Application</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n              <BreadcrumbItem>\n                <BreadcrumbPage>Data Fetching</BreadcrumbPage>\n              </BreadcrumbItem>\n            </BreadcrumbList>\n          </Breadcrumb>\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          <styled.div\n            css={{\n              display: \"grid\",\n              gridAutoRows: \"min\",\n              gap: \"4\",\n              md: { gridTemplateColumns: \"repeat(3, minmax(0, 1fr))\" },\n            }}\n          >\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n          </styled.div>\n          <styled.div\n            css={{ bg: \"muted/50\", minH: \"100vh\", flex: \"1\", rounded: \"xl\", md: { minH: \"min\" } }}\n          />\n        </styled.div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-01/components/app-sidebar.tsx",
      "type": "registry:component",
      "content": "import * as React from \"react\";\nimport { SearchForm } from \"@/registry/default/blocks/sidebar-01/components/search-form\";\nimport { VersionSwitcher } from \"@/registry/default/blocks/sidebar-01/components/version-switcher\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n} from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  versions: [\"1.0.1\", \"1.1.0-alpha\", \"2.0.0-beta1\"],\n  navMain: [\n    {\n      title: \"Getting Started\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Installation\",\n          url: \"#\",\n        },\n        {\n          title: \"Project Structure\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Building Your Application\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Routing\",\n          url: \"#\",\n        },\n        {\n          title: \"Data Fetching\",\n          url: \"#\",\n          isActive: true,\n        },\n        {\n          title: \"Rendering\",\n          url: \"#\",\n        },\n        {\n          title: \"Caching\",\n          url: \"#\",\n        },\n        {\n          title: \"Styling\",\n          url: \"#\",\n        },\n        {\n          title: \"Optimizing\",\n          url: \"#\",\n        },\n        {\n          title: \"Configuring\",\n          url: \"#\",\n        },\n        {\n          title: \"Testing\",\n          url: \"#\",\n        },\n        {\n          title: \"Authentication\",\n          url: \"#\",\n        },\n        {\n          title: \"Deploying\",\n          url: \"#\",\n        },\n        {\n          title: \"Upgrading\",\n          url: \"#\",\n        },\n        {\n          title: \"Examples\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"API Reference\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Components\",\n          url: \"#\",\n        },\n        {\n          title: \"File Conventions\",\n          url: \"#\",\n        },\n        {\n          title: \"Functions\",\n          url: \"#\",\n        },\n        {\n          title: \"next.config.js Options\",\n          url: \"#\",\n        },\n        {\n          title: \"CLI\",\n          url: \"#\",\n        },\n        {\n          title: \"Edge Runtime\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Architecture\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Accessibility\",\n          url: \"#\",\n        },\n        {\n          title: \"Fast Refresh\",\n          url: \"#\",\n        },\n        {\n          title: \"Next.js Compiler\",\n          url: \"#\",\n        },\n        {\n          title: \"Supported Browsers\",\n          url: \"#\",\n        },\n        {\n          title: \"Turbopack\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props}>\n      <SidebarHeader>\n        <VersionSwitcher versions={data.versions} defaultVersion={data.versions[0]} />\n        <SearchForm />\n      </SidebarHeader>\n      <SidebarContent>\n        {/* We create a SidebarGroup for each parent. */}\n        {data.navMain.map((item) => (\n          <SidebarGroup key={item.title}>\n            <SidebarGroupLabel>{item.title}</SidebarGroupLabel>\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {item.items.map((item) => (\n                  <SidebarMenuItem key={item.title}>\n                    <SidebarMenuButton asChild isActive={item.isActive}>\n                      <a href={item.url}>{item.title}</a>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                ))}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        ))}\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-01/components/search-form.tsx",
      "type": "registry:component",
      "content": "import { LuSearch } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { SidebarGroup, SidebarGroupContent, SidebarInput } from \"@/registry/default/ui/sidebar\";\n\nexport function SearchForm({ ...props }: React.ComponentProps<\"form\">) {\n  return (\n    <form {...props}>\n      <SidebarGroup css={{ py: \"0\" }}>\n        <SidebarGroupContent css={{ pos: \"relative\" }}>\n          <Label htmlFor=\"search\" css={{ srOnly: true }}>\n            Search\n          </Label>\n          <SidebarInput id=\"search\" placeholder=\"Search the docs...\" css={{ pl: \"8\" }} />\n          <LuSearch\n            className={css({\n              pointerEvents: \"none\",\n              pos: \"absolute\",\n              top: \"50%\",\n              left: \"2\",\n              w: \"4\",\n              h: \"4\",\n              transform: \"translateY(-50%)\",\n              opacity: \"0.5\",\n              userSelect: \"none\",\n            })}\n          />\n        </SidebarGroupContent>\n      </SidebarGroup>\n    </form>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-01/components/version-switcher.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuCheck, LuChevronsUpDown, LuGalleryVerticalEnd } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { SidebarMenu, SidebarMenuButton, SidebarMenuItem } from \"@/registry/default/ui/sidebar\";\n\nexport function VersionSwitcher({\n  versions,\n  defaultVersion,\n}: {\n  versions: string[];\n  defaultVersion: string;\n}) {\n  const [selectedVersion, setSelectedVersion] = React.useState(defaultVersion);\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              css={{\n                \"&[data-state=open]\": {\n                  bg: \"sidebar.accent\",\n                  color: \"sidebar.accent.fg\",\n                },\n              }}\n            >\n              <styled.div\n                css={{\n                  bg: \"sidebar.primary\",\n                  color: \"sidebar.primary.fg\",\n                  display: \"flex\",\n                  aspectRatio: \"square\",\n                  w: \"8\",\n                  h: \"8\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rounded: \"lg\",\n                }}\n              >\n                <LuGalleryVerticalEnd className={css({ w: \"4\", h: \"4\" })} />\n              </styled.div>\n              <styled.div\n                css={{ display: \"flex\", flexDir: \"column\", gap: \"0.5\", lineHeight: \"none\" }}\n              >\n                <styled.span css={{ fontWeight: \"medium\" }}>Documentation</styled.span>\n                <span>v{selectedVersion}</span>\n              </styled.div>\n              <LuChevronsUpDown className={css({ ml: \"auto\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            align=\"start\"\n            css={{ w: \"var(--radix-dropdown-menu-trigger-width)\" }}\n          >\n            {versions.map((version) => (\n              <DropdownMenuItem key={version} onSelect={() => setSelectedVersion(version)}>\n                v{version}{\" \"}\n                {version === selectedVersion && <LuCheck className={css({ ml: \"auto\" })} />}\n              </DropdownMenuItem>\n            ))}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}