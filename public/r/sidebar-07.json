{
  "name": "sidebar-07",
  "type": "registry:block",
  "description": "A sidebar that collapses to icons.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "collapsible",
    "dropdown-menu",
    "avatar"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-07/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { AppSidebar } from \"@/registry/default/blocks/sidebar-07/components/app-sidebar\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Separator } from \"@/registry/default/ui/separator\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <styled.header\n          css={{\n            display: \"flex\",\n            h: \"16\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n            transitionProperty: \"width,height\",\n            transitionTimingFunction: \"linear\",\n            \".group-sidebar-wrapper:has([data-collapsible=icon]) &\": { h: \"12\" },\n          }}\n        >\n          <styled.div css={{ display: \"flex\", alignItems: \"center\", gap: \"2\", px: \"4\" }}>\n            <SidebarTrigger css={{ ml: \"-1\" }} />\n            <Separator orientation=\"vertical\" css={{ mr: \"2\", _vertical: { h: \"4\" } }} />\n            <Breadcrumb>\n              <BreadcrumbList>\n                <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                  <BreadcrumbLink href=\"#\">Building Your Application</BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n                <BreadcrumbItem>\n                  <BreadcrumbPage>Data Fetching</BreadcrumbPage>\n                </BreadcrumbItem>\n              </BreadcrumbList>\n            </Breadcrumb>\n          </styled.div>\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          <styled.div\n            css={{\n              display: \"grid\",\n              gridAutoRows: \"min\",\n              gap: \"4\",\n              md: { gridTemplateColumns: \"repeat(3, minmax(0, 1fr))\" },\n            }}\n          >\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n          </styled.div>\n          <styled.div\n            css={{ bg: \"muted/50\", minH: \"100vh\", flex: \"1\", rounded: \"xl\", md: { minH: \"min\" } }}\n          />\n        </styled.div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-07/components/app-sidebar.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  LuAudioWaveform,\n  LuBookOpen,\n  LuBot,\n  LuChartPie,\n  LuCommand,\n  LuFrame,\n  LuGalleryVerticalEnd,\n  LuMap,\n  LuSettings2,\n  LuSquareTerminal,\n} from \"react-icons/lu\";\nimport { NavMain } from \"@/registry/default/blocks/sidebar-07/components/nav-main\";\nimport { NavProjects } from \"@/registry/default/blocks/sidebar-07/components/nav-projects\";\nimport { NavUser } from \"@/registry/default/blocks/sidebar-07/components/nav-user\";\nimport { TeamSwitcher } from \"@/registry/default/blocks/sidebar-07/components/team-switcher\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarRail,\n} from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"https://github.com/shadcn.png\",\n  },\n  teams: [\n    {\n      name: \"Acme Inc\",\n      logo: LuGalleryVerticalEnd,\n      plan: \"Enterprise\",\n    },\n    {\n      name: \"Acme Corp.\",\n      logo: LuAudioWaveform,\n      plan: \"Startup\",\n    },\n    {\n      name: \"Evil Corp.\",\n      logo: LuCommand,\n      plan: \"Free\",\n    },\n  ],\n  navMain: [\n    {\n      title: \"Playground\",\n      url: \"#\",\n      icon: LuSquareTerminal,\n      isActive: true,\n      items: [\n        {\n          title: \"History\",\n          url: \"#\",\n        },\n        {\n          title: \"Starred\",\n          url: \"#\",\n        },\n        {\n          title: \"Settings\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Models\",\n      url: \"#\",\n      icon: LuBot,\n      items: [\n        {\n          title: \"Genesis\",\n          url: \"#\",\n        },\n        {\n          title: \"Explorer\",\n          url: \"#\",\n        },\n        {\n          title: \"Quantum\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Documentation\",\n      url: \"#\",\n      icon: LuBookOpen,\n      items: [\n        {\n          title: \"Introduction\",\n          url: \"#\",\n        },\n        {\n          title: \"Get Started\",\n          url: \"#\",\n        },\n        {\n          title: \"Tutorials\",\n          url: \"#\",\n        },\n        {\n          title: \"Changelog\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: LuSettings2,\n      items: [\n        {\n          title: \"General\",\n          url: \"#\",\n        },\n        {\n          title: \"Team\",\n          url: \"#\",\n        },\n        {\n          title: \"Billing\",\n          url: \"#\",\n        },\n        {\n          title: \"Limits\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  projects: [\n    {\n      name: \"Design Engineering\",\n      url: \"#\",\n      icon: LuFrame,\n    },\n    {\n      name: \"Sales & Marketing\",\n      url: \"#\",\n      icon: LuChartPie,\n    },\n    {\n      name: \"Travel\",\n      url: \"#\",\n      icon: LuMap,\n    },\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar collapsible=\"icon\" {...props}>\n      <SidebarHeader>\n        <TeamSwitcher teams={data.teams} />\n      </SidebarHeader>\n      <SidebarContent>\n        <NavMain items={data.navMain} />\n        <NavProjects projects={data.projects} />\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-07/components/nav-main.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport type { IconType } from \"react-icons\";\nimport { LuChevronRight } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\";\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string;\n    url: string;\n    icon?: IconType;\n    isActive?: boolean;\n    items?: {\n      title: string;\n      url: string;\n    }[];\n  }[];\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupLabel>Platform</SidebarGroupLabel>\n      <SidebarMenu>\n        {items.map((item) => (\n          <Collapsible\n            key={item.title}\n            asChild\n            defaultOpen={item.isActive}\n            className=\"group-collapsible\"\n          >\n            <SidebarMenuItem>\n              <CollapsibleTrigger asChild>\n                <SidebarMenuButton tooltip={item.title}>\n                  {item.icon && <item.icon />}\n                  <span>{item.title}</span>\n                  <LuChevronRight\n                    className={css({\n                      ml: \"auto\",\n                      transitionProperty: \"transform\",\n                      transitionDuration: \"fast\",\n                      \".group-collapsible[data-state=open] &\": { transform: \"rotate(90deg)\" },\n                    })}\n                  />\n                </SidebarMenuButton>\n              </CollapsibleTrigger>\n              <CollapsibleContent>\n                <SidebarMenuSub>\n                  {item.items?.map((subItem) => (\n                    <SidebarMenuSubItem key={subItem.title}>\n                      <SidebarMenuSubButton asChild>\n                        <a href={subItem.url}>\n                          <span>{subItem.title}</span>\n                        </a>\n                      </SidebarMenuSubButton>\n                    </SidebarMenuSubItem>\n                  ))}\n                </SidebarMenuSub>\n              </CollapsibleContent>\n            </SidebarMenuItem>\n          </Collapsible>\n        ))}\n      </SidebarMenu>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-07/components/nav-projects.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport type { IconType } from \"react-icons\";\nimport { LuEllipsis, LuFolder, LuForward, LuTrash2 } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavProjects({\n  projects,\n}: {\n  projects: {\n    name: string;\n    url: string;\n    icon: IconType;\n  }[];\n}) {\n  const { isMobile } = useSidebar();\n\n  return (\n    <SidebarGroup css={{ \".group[data-collapsible=icon] &\": { display: \"none\" } }}>\n      <SidebarGroupLabel>Projects</SidebarGroupLabel>\n      <SidebarMenu>\n        {projects.map((item) => (\n          <SidebarMenuItem key={item.name}>\n            <SidebarMenuButton asChild>\n              <a href={item.url}>\n                <item.icon />\n                <span>{item.name}</span>\n              </a>\n            </SidebarMenuButton>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuAction showOnHover>\n                  <LuEllipsis />\n                  <styled.span css={{ srOnly: true }}>More</styled.span>\n                </SidebarMenuAction>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                css={{ w: \"48\", rounded: \"lg\" }}\n                side={isMobile ? \"bottom\" : \"right\"}\n                align={isMobile ? \"end\" : \"start\"}\n              >\n                <DropdownMenuItem>\n                  <LuFolder className={css({ color: \"muted.fg\" })} />\n                  <span>View Project</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <LuForward className={css({ color: \"muted.fg\" })} />\n                  <span>Share Project</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LuTrash2 className={css({ color: \"muted.fg\" })} />\n                  <span>Delete Project</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        ))}\n        <SidebarMenuItem>\n          <SidebarMenuButton css={{ color: \"sidebar.fg/70\" }}>\n            <LuEllipsis className={css({ color: \"sidebar.fg/70\" })} />\n            <span>More</span>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      </SidebarMenu>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-07/components/nav-user.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport {\n  LuBadgeCheck,\n  LuBell,\n  LuChevronsUpDown,\n  LuCreditCard,\n  LuLogOut,\n  LuSparkles,\n} from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/registry/default/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string;\n    email: string;\n    avatar: string;\n  };\n}) {\n  const { isMobile } = useSidebar();\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              css={{\n                \"&[data-state=open]\": {\n                  bg: \"sidebar.accent\",\n                  color: \"sidebar.accent.fg\",\n                },\n              }}\n            >\n              <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n              </Avatar>\n              <styled.div\n                css={{\n                  display: \"grid\",\n                  flex: \"1\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                  lineHeight: \"tight\",\n                }}\n              >\n                <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                  {user.name}\n                </styled.span>\n                <styled.span css={{ truncate: true, textStyle: \"xs\" }}>{user.email}</styled.span>\n              </styled.div>\n              <LuChevronsUpDown className={css({ ml: \"auto\", w: \"4\", h: \"4\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            css={{ w: \"var(--radix-dropdown-menu-trigger-width)\", minW: \"56\", rounded: \"lg\" }}\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel css={{ p: \"0\", fontWeight: \"normal\" }}>\n              <styled.div\n                css={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"2\",\n                  px: \"1\",\n                  py: \"1.5\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                }}\n              >\n                <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n                </Avatar>\n                <styled.div\n                  css={{\n                    display: \"grid\",\n                    flex: \"1\",\n                    textAlign: \"left\",\n                    textStyle: \"sm\",\n                    lineHeight: \"tight\",\n                  }}\n                >\n                  <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                    {user.name}\n                  </styled.span>\n                  <styled.span css={{ truncate: true, textStyle: \"xs\" }}>{user.email}</styled.span>\n                </styled.div>\n              </styled.div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuSparkles />\n                Upgrade to Pro\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuBadgeCheck />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuCreditCard />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuBell />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LuLogOut />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-07/components/team-switcher.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuChevronsUpDown, LuPlus } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function TeamSwitcher({\n  teams,\n}: {\n  teams: {\n    name: string;\n    logo: React.ElementType;\n    plan: string;\n  }[];\n}) {\n  const { isMobile } = useSidebar();\n  const [activeTeam, setActiveTeam] = React.useState(teams[0]);\n\n  if (!activeTeam) {\n    return null;\n  }\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              css={{\n                \"&[data-state=open]\": {\n                  bg: \"sidebar.accent\",\n                  color: \"sidebar.accent.fg\",\n                },\n              }}\n            >\n              <styled.div\n                css={{\n                  bg: \"sidebar.primary\",\n                  color: \"sidebar.primary.fg\",\n                  display: \"flex\",\n                  aspectRatio: \"square\",\n                  w: \"8\",\n                  h: \"8\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rounded: \"lg\",\n                }}\n              >\n                <activeTeam.logo className={css({ w: \"4\", h: \"4\" })} />\n              </styled.div>\n              <styled.div\n                css={{\n                  display: \"grid\",\n                  flex: \"1\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                  lineHeight: \"tight\",\n                }}\n              >\n                <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                  {activeTeam.name}\n                </styled.span>\n                <styled.span css={{ truncate: true, textStyle: \"xs\" }}>\n                  {activeTeam.plan}\n                </styled.span>\n              </styled.div>\n              <LuChevronsUpDown className={css({ ml: \"auto\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            css={{ w: \"var(--radix-dropdown-menu-trigger-width)\", minW: \"56\", rounded: \"lg\" }}\n            align=\"start\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            sideOffset={4}\n          >\n            <DropdownMenuLabel css={{ color: \"muted.fg\", textStyle: \"xs\" }}>\n              Teams\n            </DropdownMenuLabel>\n            {teams.map((team, index) => (\n              <DropdownMenuItem\n                key={team.name}\n                onClick={() => setActiveTeam(team)}\n                css={{ gap: \"2\", p: \"2\" }}\n              >\n                <styled.div\n                  css={{\n                    display: \"flex\",\n                    w: \"6\",\n                    h: \"6\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    rounded: \"md\",\n                    borderWidth: \"1px\",\n                  }}\n                >\n                  <team.logo className={css({ w: \"3.5\", h: \"3.5\", flexShrink: \"0\" })} />\n                </styled.div>\n                {team.name}\n                <DropdownMenuShortcut>⌘{index + 1}</DropdownMenuShortcut>\n              </DropdownMenuItem>\n            ))}\n            <DropdownMenuSeparator />\n            <DropdownMenuItem css={{ gap: \"2\", p: \"2\" }}>\n              <styled.div\n                css={{\n                  display: \"flex\",\n                  w: \"6\",\n                  h: \"6\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rounded: \"md\",\n                  borderWidth: \"1px\",\n                  bg: \"transparent\",\n                }}\n              >\n                <LuPlus className={css({ w: \"4\", h: \"4\" })} />\n              </styled.div>\n              <styled.div css={{ color: \"muted.fg\", fontWeight: \"medium\" }}>Add team</styled.div>\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}