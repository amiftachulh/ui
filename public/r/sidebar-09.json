{
  "name": "sidebar-09",
  "type": "registry:block",
  "description": "Collapsible nested sidebars.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "collapsible",
    "dropdown-menu",
    "avatar",
    "switch",
    "label"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-09/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { AppSidebar } from \"@/registry/default/blocks/sidebar-09/components/app-sidebar\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Separator } from \"@/registry/default/ui/separator\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider\n      style={\n        {\n          \"--sidebar-width\": \"350px\",\n        } as React.CSSProperties\n      }\n    >\n      <AppSidebar />\n      <SidebarInset>\n        <styled.header\n          css={{\n            bg: \"bg\",\n            pos: \"sticky\",\n            top: \"0\",\n            display: \"flex\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n            borderBottomWidth: \"1px\",\n            p: \"4\",\n          }}\n        >\n          <SidebarTrigger css={{ ml: \"-1\" }} />\n          <Separator\n            orientation=\"vertical\"\n            css={{\n              mr: \"2\",\n              _vertical: {\n                h: \"4\",\n              },\n            }}\n          />\n          <Breadcrumb>\n            <BreadcrumbList>\n              <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                <BreadcrumbLink href=\"#\">All Inboxes</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n              <BreadcrumbItem>\n                <BreadcrumbPage>Inbox</BreadcrumbPage>\n              </BreadcrumbItem>\n            </BreadcrumbList>\n          </Breadcrumb>\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          {Array.from({ length: 24 }).map((_, index) => (\n            <styled.div\n              key={index}\n              css={{ bg: \"muted/50\", aspectRatio: \"16/9\", w: \"full\", h: \"12\", rounded: \"lg\" }}\n            />\n          ))}\n        </styled.div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-09/components/app-sidebar.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuArchiveX, LuCommand, LuFile, LuInbox, LuSend, LuTrash2 } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { NavUser } from \"@/registry/default/blocks/sidebar-09/components/nav-user\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarInput,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\nimport { Switch } from \"@/registry/default/ui/switch\";\n\n// This is sample data\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"https://github.com/shadcn.png\",\n  },\n  navMain: [\n    {\n      title: \"Inbox\",\n      url: \"#\",\n      icon: LuInbox,\n      isActive: true,\n    },\n    {\n      title: \"Drafts\",\n      url: \"#\",\n      icon: LuFile,\n      isActive: false,\n    },\n    {\n      title: \"Sent\",\n      url: \"#\",\n      icon: LuSend,\n      isActive: false,\n    },\n    {\n      title: \"Junk\",\n      url: \"#\",\n      icon: LuArchiveX,\n      isActive: false,\n    },\n    {\n      title: \"Trash\",\n      url: \"#\",\n      icon: LuTrash2,\n      isActive: false,\n    },\n  ],\n  mails: [\n    {\n      name: \"William Smith\",\n      email: \"williamsmith@example.com\",\n      subject: \"Meeting Tomorrow\",\n      date: \"09:34 AM\",\n      teaser:\n        \"Hi team, just a reminder about our meeting tomorrow at 10 AM.\\nPlease come prepared with your project updates.\",\n    },\n    {\n      name: \"Alice Smith\",\n      email: \"alicesmith@example.com\",\n      subject: \"Re: Project Update\",\n      date: \"Yesterday\",\n      teaser:\n        \"Thanks for the update. The progress looks great so far.\\nLet's schedule a call to discuss the next steps.\",\n    },\n    {\n      name: \"Bob Johnson\",\n      email: \"bobjohnson@example.com\",\n      subject: \"Weekend Plans\",\n      date: \"2 days ago\",\n      teaser:\n        \"Hey everyone! I'm thinking of organizing a team outing this weekend.\\nWould you be interested in a hiking trip or a beach day?\",\n    },\n    {\n      name: \"Emily Davis\",\n      email: \"emilydavis@example.com\",\n      subject: \"Re: Question about Budget\",\n      date: \"2 days ago\",\n      teaser:\n        \"I've reviewed the budget numbers you sent over.\\nCan we set up a quick call to discuss some potential adjustments?\",\n    },\n    {\n      name: \"Michael Wilson\",\n      email: \"michaelwilson@example.com\",\n      subject: \"Important Announcement\",\n      date: \"1 week ago\",\n      teaser:\n        \"Please join us for an all-hands meeting this Friday at 3 PM.\\nWe have some exciting news to share about the company's future.\",\n    },\n    {\n      name: \"Sarah Brown\",\n      email: \"sarahbrown@example.com\",\n      subject: \"Re: Feedback on Proposal\",\n      date: \"1 week ago\",\n      teaser:\n        \"Thank you for sending over the proposal. I've reviewed it and have some thoughts.\\nCould we schedule a meeting to discuss my feedback in detail?\",\n    },\n    {\n      name: \"David Lee\",\n      email: \"davidlee@example.com\",\n      subject: \"New Project Idea\",\n      date: \"1 week ago\",\n      teaser:\n        \"I've been brainstorming and came up with an interesting project concept.\\nDo you have time this week to discuss its potential impact and feasibility?\",\n    },\n    {\n      name: \"Olivia Wilson\",\n      email: \"oliviawilson@example.com\",\n      subject: \"Vacation Plans\",\n      date: \"1 week ago\",\n      teaser:\n        \"Just a heads up that I'll be taking a two-week vacation next month.\\nI'll make sure all my projects are up to date before I leave.\",\n    },\n    {\n      name: \"James Martin\",\n      email: \"jamesmartin@example.com\",\n      subject: \"Re: Conference Registration\",\n      date: \"1 week ago\",\n      teaser:\n        \"I've completed the registration for the upcoming tech conference.\\nLet me know if you need any additional information from my end.\",\n    },\n    {\n      name: \"Sophia White\",\n      email: \"sophiawhite@example.com\",\n      subject: \"Team Dinner\",\n      date: \"1 week ago\",\n      teaser:\n        \"To celebrate our recent project success, I'd like to organize a team dinner.\\nAre you available next Friday evening? Please let me know your preferences.\",\n    },\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  // Note: I'm using state to show active item.\n  // IRL you should use the url/router.\n  const [activeItem, setActiveItem] = React.useState(data.navMain[0]);\n  const [mails, setMails] = React.useState(data.mails);\n  const { setOpen } = useSidebar();\n\n  return (\n    <Sidebar\n      collapsible=\"icon\"\n      css={{ overflow: \"hidden\", \"& > *[data-sidebar=sidebar]\": { flexDir: \"row\" } }}\n      {...props}\n    >\n      {/* This is the first sidebar */}\n      {/* We disable collapsible and adjust width to icon. */}\n      {/* This will make the sidebar appear as icons. */}\n      <Sidebar\n        collapsible=\"none\"\n        css={{\n          w: \"calc(var(--sidebar-width-icon) + 1px)!\",\n          borderRightWidth: \"1px\",\n        }}\n      >\n        <SidebarHeader>\n          <SidebarMenu>\n            <SidebarMenuItem>\n              <SidebarMenuButton size=\"lg\" asChild css={{ md: { h: \"8\", p: \"0\" } }}>\n                <a href=\"#\">\n                  <styled.div\n                    css={{\n                      bg: \"sidebar.primary\",\n                      color: \"sidebar.primary.fg\",\n                      display: \"flex\",\n                      aspectRatio: \"square\",\n                      w: \"8\",\n                      h: \"8\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      rounded: \"lg\",\n                    }}\n                  >\n                    <LuCommand className={css({ w: \"4\", h: \"4\" })} />\n                  </styled.div>\n                  <styled.div\n                    css={{\n                      display: \"grid\",\n                      flex: \"1\",\n                      textAlign: \"left\",\n                      textStyle: \"sm\",\n                      lineHeight: \"tight\",\n                    }}\n                  >\n                    <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                      Acme Inc\n                    </styled.span>\n                    <styled.span css={{ truncate: true, textStyle: \"xs\" }}>Enterprise</styled.span>\n                  </styled.div>\n                </a>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarHeader>\n        <SidebarContent>\n          <SidebarGroup>\n            <SidebarGroupContent css={{ px: \"1.5\", md: { px: \"0\" } }}>\n              <SidebarMenu>\n                {data.navMain.map((item) => (\n                  <SidebarMenuItem key={item.title}>\n                    <SidebarMenuButton\n                      tooltip={{\n                        children: item.title,\n                        hidden: false,\n                      }}\n                      onClick={() => {\n                        setActiveItem(item);\n                        const mail = data.mails.sort(() => Math.random() - 0.5);\n                        setMails(mail.slice(0, Math.max(5, Math.floor(Math.random() * 10) + 1)));\n                        setOpen(true);\n                      }}\n                      isActive={activeItem?.title === item.title}\n                      css={{ px: \"2.5\", md: { px: \"2\" } }}\n                    >\n                      <item.icon />\n                      <span>{item.title}</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                ))}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        </SidebarContent>\n        <SidebarFooter>\n          <NavUser user={data.user} />\n        </SidebarFooter>\n      </Sidebar>\n\n      {/* This is the second sidebar */}\n      {/* We disable collapsible and let it fill remaining space */}\n      <Sidebar collapsible=\"none\" css={{ display: \"none\", flex: \"1\", md: { display: \"flex\" } }}>\n        <SidebarHeader css={{ gap: \"3.5\", borderBottomWidth: \"1px\", p: \"4\" }}>\n          <styled.div\n            css={{\n              display: \"flex\",\n              w: \"full\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <styled.div css={{ color: \"fg\", textStyle: \"md\", fontWeight: \"medium\" }}>\n              {activeItem?.title}\n            </styled.div>\n            <Label css={{ display: \"flex\", alignItems: \"center\", gap: \"2\", textStyle: \"sm\" }}>\n              <span>Unreads</span>\n              <Switch css={{ shadow: \"none\" }} />\n            </Label>\n          </styled.div>\n          <SidebarInput placeholder=\"Type to search...\" />\n        </SidebarHeader>\n        <SidebarContent>\n          <SidebarGroup css={{ px: \"0\" }}>\n            <SidebarGroupContent>\n              {mails.map((mail) => (\n                <styled.a\n                  href=\"#\"\n                  key={mail.email}\n                  css={{\n                    display: \"flex\",\n                    flexDir: \"column\",\n                    alignItems: \"flex-start\",\n                    gap: \"2\",\n                    borderBottomWidth: \"1px\",\n                    p: \"4\",\n                    textStyle: \"sm\",\n                    lineHeight: \"tight\",\n                    whiteSpace: \"nowrap\",\n                    _last: { borderBottomWidth: \"0\" },\n                    _hover: {\n                      bg: \"sidebar.accent\",\n                      color: \"sidebar.accent.fg\",\n                    },\n                  }}\n                >\n                  <styled.div css={{ display: \"flex\", w: \"full\", alignItems: \"center\", gap: \"2\" }}>\n                    <span>{mail.name}</span>{\" \"}\n                    <styled.span css={{ ml: \"auto\", textStyle: \"xs\" }}>{mail.date}</styled.span>\n                  </styled.div>\n                  <styled.span css={{ fontWeight: \"medium\" }}>{mail.subject}</styled.span>\n                  <styled.span\n                    css={{\n                      lineClamp: \"2\",\n                      w: \"260px\",\n                      textStyle: \"xs\",\n                      whiteSpace: \"break-spaces\",\n                    }}\n                  >\n                    {mail.teaser}\n                  </styled.span>\n                </styled.a>\n              ))}\n            </SidebarGroupContent>\n          </SidebarGroup>\n        </SidebarContent>\n      </Sidebar>\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-09/components/nav-user.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport {\n  LuBadgeCheck,\n  LuBell,\n  LuChevronsUpDown,\n  LuCreditCard,\n  LuLogOut,\n  LuSparkles,\n} from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/registry/default/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string;\n    email: string;\n    avatar: string;\n  };\n}) {\n  const { isMobile } = useSidebar();\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              css={{\n                \"&[data-state=open]\": {\n                  bg: \"sidebar.accent\",\n                  color: \"sidebar.accent.fg\",\n                },\n                md: {\n                  h: \"8\",\n                  p: \"0\",\n                },\n              }}\n            >\n              <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n              </Avatar>\n              <styled.div\n                css={{\n                  display: \"grid\",\n                  flex: \"1\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                  lineHeight: \"tight\",\n                }}\n              >\n                <styled.span css={{ truncate: \"true\", fontWeight: \"medium\" }}>\n                  {user.name}\n                </styled.span>\n                <styled.span css={{ truncate: \"true\", textStyle: \"xs\" }}>{user.email}</styled.span>\n              </styled.div>\n              <LuChevronsUpDown className={css({ ml: \"auto\", w: \"4\", h: \"4\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            css={{ w: \"var(--radix-dropdown-menu-trigger-width)\", minW: \"56\", rounded: \"lg\" }}\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel css={{ p: \"0\", fontWeight: \"normal\" }}>\n              <styled.div\n                css={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"2\",\n                  px: \"1\",\n                  py: \"1.5\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                }}\n              >\n                <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n                </Avatar>\n                <styled.div\n                  css={{\n                    display: \"grid\",\n                    flex: \"1\",\n                    textAlign: \"left\",\n                    textStyle: \"sm\",\n                    lineHeight: \"tight\",\n                  }}\n                >\n                  <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                    {user.name}\n                  </styled.span>\n                  <styled.span css={{ truncate: true, textStyle: \"xs\" }}>{user.email}</styled.span>\n                </styled.div>\n              </styled.div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuSparkles />\n                Upgrade to Pro\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuBadgeCheck />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuCreditCard />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuBell />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LuLogOut />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}