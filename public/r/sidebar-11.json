{
  "name": "sidebar-11",
  "type": "registry:block",
  "description": "A sidebar with a collapsible file tree.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "collapsible"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-11/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { AppSidebar } from \"@/registry/default/blocks/sidebar-11/components/app-sidebar\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Separator } from \"@/registry/default/ui/separator\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <styled.header\n          css={{\n            display: \"flex\",\n            h: \"16\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n            borderBottomWidth: \"1px\",\n            px: \"4\",\n          }}\n        >\n          <SidebarTrigger css={{ ml: \"-1\" }} />\n          <Separator orientation=\"vertical\" css={{ mr: \"2\", _vertical: { h: \"4\" } }} />\n          <Breadcrumb>\n            <BreadcrumbList>\n              <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                <BreadcrumbLink href=\"#\">components</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n              <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                <BreadcrumbLink href=\"#\">ui</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n              <BreadcrumbItem>\n                <BreadcrumbPage>button.tsx</BreadcrumbPage>\n              </BreadcrumbItem>\n            </BreadcrumbList>\n          </Breadcrumb>\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          <styled.div\n            css={{\n              display: \"grid\",\n              gridAutoRows: \"min\",\n              gap: \"4\",\n              md: { gridTemplateColumns: \"repeat(3, minmax(0, 1fr))\" },\n            }}\n          >\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n          </styled.div>\n          <styled.div\n            css={{ bg: \"muted/50\", minH: \"100vh\", flex: \"1\", rounded: \"xl\", md: { minH: \"min\" } }}\n          />\n        </styled.div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-11/components/app-sidebar.tsx",
      "type": "registry:component",
      "content": "import * as React from \"react\";\nimport { LuChevronRight, LuFile, LuFolder } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarRail,\n} from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  changes: [\n    {\n      file: \"README.md\",\n      state: \"M\",\n    },\n    {\n      file: \"api/hello/route.ts\",\n      state: \"U\",\n    },\n    {\n      file: \"app/layout.tsx\",\n      state: \"M\",\n    },\n  ],\n  tree: [\n    [\"app\", [\"api\", [\"hello\", [\"route.ts\"]], \"page.tsx\", \"layout.tsx\", [\"blog\", [\"page.tsx\"]]]],\n    [\"components\", [\"ui\", \"button.tsx\", \"card.tsx\"], \"header.tsx\", \"footer.tsx\"],\n    [\"lib\", [\"util.ts\"]],\n    [\"public\", \"favicon.ico\", \"vercel.svg\"],\n    \".eslintrc.json\",\n    \".gitignore\",\n    \"next.config.js\",\n    \"tailwind.config.js\",\n    \"package.json\",\n    \"README.md\",\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props}>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Changes</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {data.changes.map((item, index) => (\n                <SidebarMenuItem key={index}>\n                  <SidebarMenuButton>\n                    <LuFile />\n                    {item.file}\n                  </SidebarMenuButton>\n                  <SidebarMenuBadge>{item.state}</SidebarMenuBadge>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n        <SidebarGroup>\n          <SidebarGroupLabel>Files</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {data.tree.map((item, index) => (\n                <Tree key={index} item={item} />\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n\nfunction Tree({ item }: { item: string | any[] }) {\n  const [name, ...items] = Array.isArray(item) ? item : [item];\n\n  if (!items.length) {\n    return (\n      <SidebarMenuButton\n        isActive={name === \"button.tsx\"}\n        css={{ \"&[data-active=true]\": { bg: \"transparent\" } }}\n      >\n        <LuFile />\n        {name}\n      </SidebarMenuButton>\n    );\n  }\n\n  return (\n    <SidebarMenuItem>\n      <Collapsible\n        className=\"group-collapsible\"\n        css={{ \"&[data-state=open]>button>svg:first-child\": { transform: \"rotate(90deg)\" } }}\n        defaultOpen={name === \"components\" || name === \"ui\"}\n      >\n        <CollapsibleTrigger asChild>\n          <SidebarMenuButton>\n            <LuChevronRight className={css({ transition: \"transform\" })} />\n            <LuFolder />\n            {name}\n          </SidebarMenuButton>\n        </CollapsibleTrigger>\n        <CollapsibleContent>\n          <SidebarMenuSub>\n            {items.map((subItem, index) => (\n              <Tree key={index} item={subItem} />\n            ))}\n          </SidebarMenuSub>\n        </CollapsibleContent>\n      </Collapsible>\n    </SidebarMenuItem>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}