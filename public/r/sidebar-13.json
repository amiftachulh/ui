{
  "name": "sidebar-13",
  "type": "registry:block",
  "description": "A sidebar in a dialog.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "button",
    "dialog"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-13/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { SettingsDialog } from \"@/registry/default/blocks/sidebar-13/components/settings-dialog\";\n\nexport default function Page() {\n  return (\n    <styled.div css={{ display: \"flex\", h: \"svh\", alignItems: \"center\", justifyContent: \"center\" }}>\n      <SettingsDialog />\n    </styled.div>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-13/components/settings-dialog.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  LuBell,\n  LuCheck,\n  LuGlobe,\n  LuHouse,\n  LuKeyboard,\n  LuLink,\n  LuLock,\n  LuMenu,\n  LuMessageCircle,\n  LuPaintbrush,\n  LuSettings,\n  LuVideo,\n} from \"react-icons/lu\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarProvider,\n} from \"@/registry/default/ui/sidebar\";\n\nconst data = {\n  nav: [\n    { name: \"Notifications\", icon: LuBell },\n    { name: \"Navigation\", icon: LuMenu },\n    { name: \"Home\", icon: LuHouse },\n    { name: \"Appearance\", icon: LuPaintbrush },\n    { name: \"Messages & media\", icon: LuMessageCircle },\n    { name: \"Language & region\", icon: LuGlobe },\n    { name: \"Accessibility\", icon: LuKeyboard },\n    { name: \"Mark as read\", icon: LuCheck },\n    { name: \"Audio & video\", icon: LuVideo },\n    { name: \"Connected accounts\", icon: LuLink },\n    { name: \"Privacy & visibility\", icon: LuLock },\n    { name: \"Advanced\", icon: LuSettings },\n  ],\n};\n\nexport function SettingsDialog() {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button size=\"sm\">Open Dialog</Button>\n      </DialogTrigger>\n      <DialogContent\n        css={{\n          overflow: \"hidden\",\n          p: \"0\",\n          md: {\n            maxW: \"700px\",\n            maxH: \"500px\",\n          },\n          lg: { maxW: \"800px\" },\n        }}\n      >\n        <DialogTitle css={{ srOnly: true }}>Settings</DialogTitle>\n        <DialogDescription css={{ srOnly: true }}>Customize your settings here.</DialogDescription>\n        <SidebarProvider css={{ alignItems: \"flex-start\" }}>\n          <Sidebar collapsible=\"none\" css={{ display: \"none\", md: { display: \"flex\" } }}>\n            <SidebarContent>\n              <SidebarGroup>\n                <SidebarGroupContent>\n                  <SidebarMenu>\n                    {data.nav.map((item) => (\n                      <SidebarMenuItem key={item.name}>\n                        <SidebarMenuButton asChild isActive={item.name === \"Messages & media\"}>\n                          <a href=\"#\">\n                            <item.icon />\n                            <span>{item.name}</span>\n                          </a>\n                        </SidebarMenuButton>\n                      </SidebarMenuItem>\n                    ))}\n                  </SidebarMenu>\n                </SidebarGroupContent>\n              </SidebarGroup>\n            </SidebarContent>\n          </Sidebar>\n          <styled.main\n            css={{ display: \"flex\", h: \"480px\", flex: \"1\", flexDir: \"column\", overflow: \"hidden\" }}\n          >\n            <styled.header\n              css={{\n                display: \"flex\",\n                h: \"16\",\n                flexShrink: \"0\",\n                alignItems: \"center\",\n                gap: \"2\",\n                transitionProperty: \"width,height\",\n                transitionTimingFunction: \"linear\",\n                \".group-sidebar-wrapper:has([data-collapsible=icon]) &\": {\n                  h: \"12\",\n                },\n              }}\n            >\n              <styled.div css={{ display: \"flex\", alignItems: \"center\", gap: \"2\", px: \"4\" }}>\n                <Breadcrumb>\n                  <BreadcrumbList>\n                    <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                      <BreadcrumbLink href=\"#\">Settings</BreadcrumbLink>\n                    </BreadcrumbItem>\n                    <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n                    <BreadcrumbItem>\n                      <BreadcrumbPage>Messages & media</BreadcrumbPage>\n                    </BreadcrumbItem>\n                  </BreadcrumbList>\n                </Breadcrumb>\n              </styled.div>\n            </styled.header>\n            <styled.div\n              css={{\n                display: \"flex\",\n                flex: \"1\",\n                flexDir: \"column\",\n                gap: \"4\",\n                overflowY: \"auto\",\n                p: \"4\",\n                pt: \"0\",\n              }}\n            >\n              {Array.from({ length: 10 }).map((_, i) => (\n                <styled.div\n                  key={i}\n                  css={{ bg: \"muted/50\", aspectRatio: \"16/9\", maxW: \"3xl\", rounded: \"xl\" }}\n                />\n              ))}\n            </styled.div>\n          </styled.main>\n        </SidebarProvider>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}