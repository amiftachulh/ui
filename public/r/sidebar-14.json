{
  "name": "sidebar-14",
  "type": "registry:block",
  "description": "A sidebar on the right.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-14/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { AppSidebar } from \"@/registry/default/blocks/sidebar-14/components/app-sidebar\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <SidebarInset>\n        <styled.header\n          css={{\n            display: \"flex\",\n            h: \"16\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n            borderBottomWidth: \"1px\",\n            px: \"4\",\n          }}\n        >\n          <Breadcrumb>\n            <BreadcrumbList>\n              <BreadcrumbItem css={{ display: \"none\", md: { display: \"block\" } }}>\n                <BreadcrumbLink href=\"#\">Building Your Application</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator css={{ display: \"none\", md: { display: \"block\" } }} />\n              <BreadcrumbItem>\n                <BreadcrumbPage>Data Fetching</BreadcrumbPage>\n              </BreadcrumbItem>\n            </BreadcrumbList>\n          </Breadcrumb>\n          <SidebarTrigger css={{ mr: \"-1\", ml: \"auto\", transform: \"rotate(180deg)\" }} />\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          <styled.div\n            css={{\n              display: \"grid\",\n              gridAutoRows: \"min\",\n              gap: \"4\",\n              md: { gridTemplateColumns: \"repeat(3, minmax(0, 1fr))\" },\n            }}\n          >\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n            <styled.div css={{ bg: \"muted/50\", aspectRatio: \"16/9\", rounded: \"xl\" }} />\n          </styled.div>\n          <styled.div\n            css={{ bg: \"muted/50\", minH: \"100vh\", flex: \"1\", rounded: \"xl\", md: { minH: \"min\" } }}\n          />\n        </styled.div>\n      </SidebarInset>\n      <AppSidebar side=\"right\" />\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-14/components/app-sidebar.tsx",
      "type": "registry:component",
      "content": "import * as React from \"react\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarRail,\n} from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  navMain: [\n    {\n      title: \"Getting Started\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Installation\",\n          url: \"#\",\n        },\n        {\n          title: \"Project Structure\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Building Your Application\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Routing\",\n          url: \"#\",\n        },\n        {\n          title: \"Data Fetching\",\n          url: \"#\",\n          isActive: true,\n        },\n        {\n          title: \"Rendering\",\n          url: \"#\",\n        },\n        {\n          title: \"Caching\",\n          url: \"#\",\n        },\n        {\n          title: \"Styling\",\n          url: \"#\",\n        },\n        {\n          title: \"Optimizing\",\n          url: \"#\",\n        },\n        {\n          title: \"Configuring\",\n          url: \"#\",\n        },\n        {\n          title: \"Testing\",\n          url: \"#\",\n        },\n        {\n          title: \"Authentication\",\n          url: \"#\",\n        },\n        {\n          title: \"Deploying\",\n          url: \"#\",\n        },\n        {\n          title: \"Upgrading\",\n          url: \"#\",\n        },\n        {\n          title: \"Examples\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"API Reference\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Components\",\n          url: \"#\",\n        },\n        {\n          title: \"File Conventions\",\n          url: \"#\",\n        },\n        {\n          title: \"Functions\",\n          url: \"#\",\n        },\n        {\n          title: \"next.config.js Options\",\n          url: \"#\",\n        },\n        {\n          title: \"CLI\",\n          url: \"#\",\n        },\n        {\n          title: \"Edge Runtime\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Architecture\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Accessibility\",\n          url: \"#\",\n        },\n        {\n          title: \"Fast Refresh\",\n          url: \"#\",\n        },\n        {\n          title: \"Next.js Compiler\",\n          url: \"#\",\n        },\n        {\n          title: \"Supported Browsers\",\n          url: \"#\",\n        },\n        {\n          title: \"Turbopack\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Community\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Contribution Guide\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props}>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Table of Contents</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {data.navMain.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton asChild>\n                    <styled.a href={item.url} css={{ fontWeight: \"medium\" }}>\n                      {item.title}\n                    </styled.a>\n                  </SidebarMenuButton>\n                  {item.items?.length ? (\n                    <SidebarMenuSub>\n                      {item.items.map((item) => (\n                        <SidebarMenuSubItem key={item.title}>\n                          <SidebarMenuSubButton asChild isActive={item.isActive}>\n                            <a href={item.url}>{item.title}</a>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  ) : null}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}