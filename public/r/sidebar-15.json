{
  "name": "sidebar-15",
  "type": "registry:block",
  "description": "A left and right sidebar.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "popover",
    "collapsible",
    "dropdown-menu",
    "calendar",
    "avatar"
  ],
  "files": [
    {
      "path": "registry/default/blocks/sidebar-15/page.tsx",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx",
      "content": "import { styled } from \"styled-system/jsx\";\nimport { SidebarLeft } from \"@/registry/default/blocks/sidebar-15/components/sidebar-left\";\nimport { SidebarRight } from \"@/registry/default/blocks/sidebar-15/components/sidebar-right\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbList,\n  BreadcrumbPage,\n} from \"@/registry/default/ui/breadcrumb\";\nimport { Separator } from \"@/registry/default/ui/separator\";\nimport { SidebarInset, SidebarProvider, SidebarTrigger } from \"@/registry/default/ui/sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <SidebarLeft />\n      <SidebarInset>\n        <styled.header\n          css={{\n            bg: \"bg\",\n            pos: \"sticky\",\n            top: \"0\",\n            display: \"flex\",\n            h: \"14\",\n            flexShrink: \"0\",\n            alignItems: \"center\",\n            gap: \"2\",\n          }}\n        >\n          <styled.div css={{ display: \"flex\", flex: \"1\", alignItems: \"center\", gap: \"2\", px: \"3\" }}>\n            <SidebarTrigger />\n            <Separator orientation=\"vertical\" css={{ mr: \"2\", _vertical: { h: \"4\" } }} />\n            <Breadcrumb>\n              <BreadcrumbList>\n                <BreadcrumbItem>\n                  <BreadcrumbPage css={{ lineClamp: \"1\" }}>\n                    Project Management & Task Tracking\n                  </BreadcrumbPage>\n                </BreadcrumbItem>\n              </BreadcrumbList>\n            </Breadcrumb>\n          </styled.div>\n        </styled.header>\n        <styled.div css={{ display: \"flex\", flex: \"1\", flexDir: \"column\", gap: \"4\", p: \"4\" }}>\n          <styled.div\n            css={{ bg: \"muted/50\", mx: \"auto\", h: \"24\", w: \"full\", maxW: \"3xl\", rounded: \"xl\" }}\n          />\n          <styled.div\n            css={{ bg: \"muted/50\", mx: \"auto\", h: \"100vh\", w: \"full\", maxW: \"3xl\", rounded: \"xl\" }}\n          />\n        </styled.div>\n      </SidebarInset>\n      <SidebarRight />\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/calendars.tsx",
      "type": "registry:component",
      "content": "import * as React from \"react\";\nimport { LuCheck, LuChevronRight } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\";\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarSeparator,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function Calendars({\n  calendars,\n}: {\n  calendars: {\n    name: string;\n    items: string[];\n  }[];\n}) {\n  return (\n    <>\n      {calendars.map((calendar, index) => (\n        <React.Fragment key={calendar.name}>\n          <SidebarGroup key={calendar.name} css={{ py: \"0\" }}>\n            <Collapsible defaultOpen={index === 0} className=\"group-collapsible\">\n              <SidebarGroupLabel\n                asChild\n                className=\"group-label\"\n                css={{\n                  w: \"full\",\n                  color: \"sidebar.fg\",\n                  textStyle: \"sm\",\n                  _hover: {\n                    bg: \"sidebar.accent\",\n                    color: \"sidebar.accent.fg\",\n                  },\n                }}\n              >\n                <CollapsibleTrigger>\n                  {calendar.name}{\" \"}\n                  <LuChevronRight\n                    className={css({\n                      ml: \"auto\",\n                      transition: \"transform\",\n                      \".group-collapsible[data-state=open] &\": { transform: \"rotate(90deg)\" },\n                    })}\n                  />\n                </CollapsibleTrigger>\n              </SidebarGroupLabel>\n              <CollapsibleContent>\n                <SidebarGroupContent>\n                  <SidebarMenu>\n                    {calendar.items.map((item, index) => (\n                      <SidebarMenuItem key={item}>\n                        <SidebarMenuButton>\n                          <styled.div\n                            data-active={index < 2}\n                            className=\"group-calendar-item\"\n                            css={{\n                              display: \"flex\",\n                              aspectRatio: \"square\",\n                              w: \"4\",\n                              h: \"4\",\n                              flexShrink: \"0\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              rounded: \"xs\",\n                              borderWidth: \"1px\",\n                              borderColor: \"sidebar.border\",\n                              color: \"sidebar.primary.fg\",\n                              \"&[data-active=true]\": {\n                                bg: \"sidebar.primary\",\n                                borderColor: \"sidebar.primary\",\n                              },\n                            }}\n                          >\n                            <LuCheck\n                              className={css({\n                                display: \"none\",\n                                w: \"3\",\n                                h: \"3\",\n                                \".group-calendar-item[data-active=true] &\": { display: \"block\" },\n                              })}\n                            />\n                          </styled.div>\n                          {item}\n                        </SidebarMenuButton>\n                      </SidebarMenuItem>\n                    ))}\n                  </SidebarMenu>\n                </SidebarGroupContent>\n              </CollapsibleContent>\n            </Collapsible>\n          </SidebarGroup>\n          <SidebarSeparator css={{ mx: \"0\" }} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/date-picker.tsx",
      "type": "registry:component",
      "content": "import { Calendar } from \"@/registry/default/ui/calendar\";\nimport { SidebarGroup, SidebarGroupContent } from \"@/registry/default/ui/sidebar\";\n\nexport function DatePicker() {\n  return (\n    <SidebarGroup css={{ px: \"0\" }}>\n      <SidebarGroupContent>\n        <Calendar\n          css={{\n            \"& [role=gridcell]\": {\n              w: \"33px\",\n            },\n          }}\n        />\n      </SidebarGroupContent>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/nav-favorites.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { LuArrowUpRight, LuEllipsis, LuLink, LuStarOff, LuTrash2 } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavFavorites({\n  favorites,\n}: {\n  favorites: {\n    name: string;\n    url: string;\n    emoji: string;\n  }[];\n}) {\n  const { isMobile } = useSidebar();\n\n  return (\n    <SidebarGroup css={{ \".group[data-collapsible=icon] &\": { display: \"none\" } }}>\n      <SidebarGroupLabel>Favorites</SidebarGroupLabel>\n      <SidebarMenu>\n        {favorites.map((item) => (\n          <SidebarMenuItem key={item.name}>\n            <SidebarMenuButton asChild>\n              <a href={item.url} title={item.name}>\n                <span>{item.emoji}</span>\n                <span>{item.name}</span>\n              </a>\n            </SidebarMenuButton>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuAction showOnHover>\n                  <LuEllipsis />\n                  <styled.span css={{ srOnly: true }}>More</styled.span>\n                </SidebarMenuAction>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                css={{ w: \"56\", rounded: \"lg\" }}\n                side={isMobile ? \"bottom\" : \"right\"}\n                align={isMobile ? \"end\" : \"start\"}\n              >\n                <DropdownMenuItem>\n                  <LuStarOff className={css({ color: \"muted.fg\" })} />\n                  <span>Remove from Favorites</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LuLink className={css({ color: \"muted.fg\" })} />\n                  <span>Copy Link</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <LuArrowUpRight className={css({ color: \"muted.fg\" })} />\n                  <span>Open in New Tab</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LuTrash2 className={css({ color: \"muted.fg\" })} />\n                  <span>Delete</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        ))}\n        <SidebarMenuItem>\n          <SidebarMenuButton css={{ color: \"sidebar.fg/70\" }}>\n            <LuEllipsis />\n            <span>More</span>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      </SidebarMenu>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/nav-main.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { type IconType } from \"react-icons\";\nimport { SidebarMenu, SidebarMenuButton, SidebarMenuItem } from \"@/registry/default/ui/sidebar\";\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string;\n    url: string;\n    icon: IconType;\n    isActive?: boolean;\n  }[];\n}) {\n  return (\n    <SidebarMenu>\n      {items.map((item) => (\n        <SidebarMenuItem key={item.title}>\n          <SidebarMenuButton asChild isActive={item.isActive}>\n            <a href={item.url}>\n              <item.icon />\n              <span>{item.title}</span>\n            </a>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      ))}\n    </SidebarMenu>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/nav-secondary.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { type IconType } from \"react-icons\";\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavSecondary({\n  items,\n  ...props\n}: {\n  items: {\n    title: string;\n    url: string;\n    icon: IconType;\n    badge?: React.ReactNode;\n  }[];\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n  return (\n    <SidebarGroup {...props}>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton asChild>\n                <a href={item.url}>\n                  <item.icon />\n                  <span>{item.title}</span>\n                </a>\n              </SidebarMenuButton>\n              {item.badge && <SidebarMenuBadge>{item.badge}</SidebarMenuBadge>}\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/nav-user.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport {\n  LuBadgeCheck,\n  LuBell,\n  LuChevronsUpDown,\n  LuCreditCard,\n  LuLogOut,\n  LuSparkles,\n} from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/registry/default/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string;\n    email: string;\n    avatar: string;\n  };\n}) {\n  const { isMobile } = useSidebar();\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              css={{\n                \"&[data-state=open]\": {\n                  bg: \"sidebar.accent\",\n                  color: \"sidebar.accent.fg\",\n                },\n              }}\n            >\n              <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n              </Avatar>\n              <styled.div\n                css={{\n                  display: \"grid\",\n                  flex: \"1\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                  lineHeight: \"tight\",\n                }}\n              >\n                <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                  {user.name}\n                </styled.span>\n                <styled.span css={{ truncate: true, textStyle: \"xs\" }}>{user.email}</styled.span>\n              </styled.div>\n              <LuChevronsUpDown className={css({ ml: \"auto\", w: \"4\", h: \"4\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            css={{ w: \"var(--radix-dropdown-menu-trigger-width)\", minW: \"56\", rounded: \"lg\" }}\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"start\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel css={{ p: \"0\", fontWeight: \"normal\" }}>\n              <styled.div\n                css={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"2\",\n                  px: \"1\",\n                  py: \"1.5\",\n                  textAlign: \"left\",\n                  textStyle: \"sm\",\n                }}\n              >\n                <Avatar css={{ w: \"8\", h: \"8\", rounded: \"lg\" }}>\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback css={{ rounded: \"lg\" }}>CN</AvatarFallback>\n                </Avatar>\n                <styled.div\n                  css={{\n                    display: \"grid\",\n                    flex: \"1\",\n                    textAlign: \"left\",\n                    textStyle: \"sm\",\n                    lineHeight: \"tight\",\n                  }}\n                >\n                  <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                    {user.name}\n                  </styled.span>\n                  <styled.span css={{ truncate: true, textStyle: \"xs\" }}>{user.email}</styled.span>\n                </styled.div>\n              </styled.div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuSparkles />\n                Upgrade to Pro\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <LuBadgeCheck />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuCreditCard />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <LuBell />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LuLogOut />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/nav-workspaces.tsx",
      "type": "registry:component",
      "content": "import { LuChevronRight, LuEllipsis, LuPlus } from \"react-icons/lu\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\";\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n} from \"@/registry/default/ui/sidebar\";\n\nexport function NavWorkspaces({\n  workspaces,\n}: {\n  workspaces: {\n    name: string;\n    emoji: React.ReactNode;\n    pages: {\n      name: string;\n      emoji: React.ReactNode;\n    }[];\n  }[];\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupLabel>Workspaces</SidebarGroupLabel>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {workspaces.map((workspace) => (\n            <Collapsible key={workspace.name}>\n              <SidebarMenuItem>\n                <SidebarMenuButton asChild>\n                  <a href=\"#\">\n                    <span>{workspace.emoji}</span>\n                    <span>{workspace.name}</span>\n                  </a>\n                </SidebarMenuButton>\n                <CollapsibleTrigger asChild>\n                  <SidebarMenuAction\n                    css={{\n                      bg: \"sidebar.accent\",\n                      color: \"sidebar.accent.fg\",\n                      left: \"2\",\n                      \"&[data-state=open]\": { transform: \"rotate(90deg)\" },\n                    }}\n                    showOnHover\n                  >\n                    <LuChevronRight />\n                  </SidebarMenuAction>\n                </CollapsibleTrigger>\n                <SidebarMenuAction showOnHover>\n                  <LuPlus />\n                </SidebarMenuAction>\n                <CollapsibleContent>\n                  <SidebarMenuSub>\n                    {workspace.pages.map((page) => (\n                      <SidebarMenuSubItem key={page.name}>\n                        <SidebarMenuSubButton asChild>\n                          <a href=\"#\">\n                            <span>{page.emoji}</span>\n                            <span>{page.name}</span>\n                          </a>\n                        </SidebarMenuSubButton>\n                      </SidebarMenuSubItem>\n                    ))}\n                  </SidebarMenuSub>\n                </CollapsibleContent>\n              </SidebarMenuItem>\n            </Collapsible>\n          ))}\n          <SidebarMenuItem>\n            <SidebarMenuButton css={{ color: \"sidebar.fg/70\" }}>\n              <LuEllipsis />\n              <span>More</span>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/sidebar-left.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  LuAudioWaveform,\n  LuBlocks,\n  LuCalendar,\n  LuCommand,\n  LuHouse,\n  LuInbox,\n  LuMessageCircleQuestion,\n  LuSearch,\n  LuSettings2,\n  LuSparkles,\n  LuTrash2,\n} from \"react-icons/lu\";\nimport { NavFavorites } from \"@/registry/default/blocks/sidebar-15/components/nav-favorites\";\nimport { NavMain } from \"@/registry/default/blocks/sidebar-15/components/nav-main\";\nimport { NavSecondary } from \"@/registry/default/blocks/sidebar-15/components/nav-secondary\";\nimport { NavWorkspaces } from \"@/registry/default/blocks/sidebar-15/components/nav-workspaces\";\nimport { TeamSwitcher } from \"@/registry/default/blocks/sidebar-15/components/team-switcher\";\nimport { Sidebar, SidebarContent, SidebarHeader, SidebarRail } from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  teams: [\n    {\n      name: \"Acme Inc\",\n      logo: LuCommand,\n      plan: \"Enterprise\",\n    },\n    {\n      name: \"Acme Corp.\",\n      logo: LuAudioWaveform,\n      plan: \"Startup\",\n    },\n    {\n      name: \"Evil Corp.\",\n      logo: LuCommand,\n      plan: \"Free\",\n    },\n  ],\n  navMain: [\n    {\n      title: \"Search\",\n      url: \"#\",\n      icon: LuSearch,\n    },\n    {\n      title: \"Ask AI\",\n      url: \"#\",\n      icon: LuSparkles,\n    },\n    {\n      title: \"Home\",\n      url: \"#\",\n      icon: LuHouse,\n      isActive: true,\n    },\n    {\n      title: \"Inbox\",\n      url: \"#\",\n      icon: LuInbox,\n      badge: \"10\",\n    },\n  ],\n  navSecondary: [\n    {\n      title: \"Calendar\",\n      url: \"#\",\n      icon: LuCalendar,\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: LuSettings2,\n    },\n    {\n      title: \"Templates\",\n      url: \"#\",\n      icon: LuBlocks,\n    },\n    {\n      title: \"Trash\",\n      url: \"#\",\n      icon: LuTrash2,\n    },\n    {\n      title: \"Help\",\n      url: \"#\",\n      icon: LuMessageCircleQuestion,\n    },\n  ],\n  favorites: [\n    {\n      name: \"Project Management & Task Tracking\",\n      url: \"#\",\n      emoji: \"📊\",\n    },\n    {\n      name: \"Family Recipe Collection & Meal Planning\",\n      url: \"#\",\n      emoji: \"🍳\",\n    },\n    {\n      name: \"Fitness Tracker & Workout Routines\",\n      url: \"#\",\n      emoji: \"💪\",\n    },\n    {\n      name: \"Book Notes & Reading List\",\n      url: \"#\",\n      emoji: \"📚\",\n    },\n    {\n      name: \"Sustainable Gardening Tips & Plant Care\",\n      url: \"#\",\n      emoji: \"🌱\",\n    },\n    {\n      name: \"Language Learning Progress & Resources\",\n      url: \"#\",\n      emoji: \"🗣️\",\n    },\n    {\n      name: \"Home Renovation Ideas & Budget Tracker\",\n      url: \"#\",\n      emoji: \"🏠\",\n    },\n    {\n      name: \"Personal Finance & Investment Portfolio\",\n      url: \"#\",\n      emoji: \"💰\",\n    },\n    {\n      name: \"Movie & TV Show Watchlist with Reviews\",\n      url: \"#\",\n      emoji: \"🎬\",\n    },\n    {\n      name: \"Daily Habit Tracker & Goal Setting\",\n      url: \"#\",\n      emoji: \"✅\",\n    },\n  ],\n  workspaces: [\n    {\n      name: \"Personal Life Management\",\n      emoji: \"🏠\",\n      pages: [\n        {\n          name: \"Daily Journal & Reflection\",\n          url: \"#\",\n          emoji: \"📔\",\n        },\n        {\n          name: \"Health & Wellness Tracker\",\n          url: \"#\",\n          emoji: \"🍏\",\n        },\n        {\n          name: \"Personal Growth & Learning Goals\",\n          url: \"#\",\n          emoji: \"🌟\",\n        },\n      ],\n    },\n    {\n      name: \"Professional Development\",\n      emoji: \"💼\",\n      pages: [\n        {\n          name: \"Career Objectives & Milestones\",\n          url: \"#\",\n          emoji: \"🎯\",\n        },\n        {\n          name: \"Skill Acquisition & Training Log\",\n          url: \"#\",\n          emoji: \"🧠\",\n        },\n        {\n          name: \"Networking Contacts & Events\",\n          url: \"#\",\n          emoji: \"🤝\",\n        },\n      ],\n    },\n    {\n      name: \"Creative Projects\",\n      emoji: \"🎨\",\n      pages: [\n        {\n          name: \"Writing Ideas & Story Outlines\",\n          url: \"#\",\n          emoji: \"✍️\",\n        },\n        {\n          name: \"Art & Design Portfolio\",\n          url: \"#\",\n          emoji: \"🖼️\",\n        },\n        {\n          name: \"Music Composition & Practice Log\",\n          url: \"#\",\n          emoji: \"🎵\",\n        },\n      ],\n    },\n    {\n      name: \"Home Management\",\n      emoji: \"🏡\",\n      pages: [\n        {\n          name: \"Household Budget & Expense Tracking\",\n          url: \"#\",\n          emoji: \"💰\",\n        },\n        {\n          name: \"Home Maintenance Schedule & Tasks\",\n          url: \"#\",\n          emoji: \"🔧\",\n        },\n        {\n          name: \"Family Calendar & Event Planning\",\n          url: \"#\",\n          emoji: \"📅\",\n        },\n      ],\n    },\n    {\n      name: \"Travel & Adventure\",\n      emoji: \"🧳\",\n      pages: [\n        {\n          name: \"Trip Planning & Itineraries\",\n          url: \"#\",\n          emoji: \"🗺️\",\n        },\n        {\n          name: \"Travel Bucket List & Inspiration\",\n          url: \"#\",\n          emoji: \"🌎\",\n        },\n        {\n          name: \"Travel Journal & Photo Gallery\",\n          url: \"#\",\n          emoji: \"📸\",\n        },\n      ],\n    },\n  ],\n};\n\nexport function SidebarLeft({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar css={{ borderRightWidth: \"0\" }} {...props}>\n      <SidebarHeader>\n        <TeamSwitcher teams={data.teams} />\n        <NavMain items={data.navMain} />\n      </SidebarHeader>\n      <SidebarContent>\n        <NavFavorites favorites={data.favorites} />\n        <NavWorkspaces workspaces={data.workspaces} />\n        <NavSecondary items={data.navSecondary} css={{ mt: \"auto\" }} />\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/sidebar-right.tsx",
      "type": "registry:component",
      "content": "import * as React from \"react\";\nimport { LuPlus } from \"react-icons/lu\";\nimport { Calendars } from \"@/registry/default/blocks/sidebar-15/components/calendars\";\nimport { DatePicker } from \"@/registry/default/blocks/sidebar-15/components/date-picker\";\nimport { NavUser } from \"@/registry/default/blocks/sidebar-15/components/nav-user\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarSeparator,\n} from \"@/registry/default/ui/sidebar\";\n\n// This is sample data.\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"https://github.com/shadcn.png\",\n  },\n  calendars: [\n    {\n      name: \"My Calendars\",\n      items: [\"Personal\", \"Work\", \"Family\"],\n    },\n    {\n      name: \"Favorites\",\n      items: [\"Holidays\", \"Birthdays\"],\n    },\n    {\n      name: \"Other\",\n      items: [\"Travel\", \"Reminders\", \"Deadlines\"],\n    },\n  ],\n};\n\nexport function SidebarRight({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar\n      collapsible=\"none\"\n      css={{\n        pos: \"sticky\",\n        top: \"0\",\n        display: \"none\",\n        h: \"svh\",\n        borderLeftWidth: \"1px\",\n        lg: { display: \"flex\" },\n      }}\n      {...props}\n    >\n      <SidebarHeader css={{ h: \"16\", borderColor: \"sidebar.border\", borderBottomWidth: \"1px\" }}>\n        <NavUser user={data.user} />\n      </SidebarHeader>\n      <SidebarContent>\n        <DatePicker />\n        <SidebarSeparator css={{ mx: \"0\" }} />\n        <Calendars calendars={data.calendars} />\n      </SidebarContent>\n      <SidebarFooter>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <SidebarMenuButton>\n              <LuPlus />\n              <span>New Calendar</span>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "registry/default/blocks/sidebar-15/components/team-switcher.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { LuChevronDown, LuPlus } from \"react-icons/lu\";\nimport { css } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { SidebarMenu, SidebarMenuButton, SidebarMenuItem } from \"@/registry/default/ui/sidebar\";\n\nexport function TeamSwitcher({\n  teams,\n}: {\n  teams: {\n    name: string;\n    logo: React.ElementType;\n    plan: string;\n  }[];\n}) {\n  const [activeTeam, setActiveTeam] = React.useState(teams[0]);\n\n  if (!activeTeam) {\n    return null;\n  }\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton css={{ w: \"fit\", px: \"1.5\" }}>\n              <styled.div\n                css={{\n                  bg: \"sidebar.primary\",\n                  color: \"sidebar.primary.fg\",\n                  display: \"flex\",\n                  aspectRatio: \"square\",\n                  w: \"5\",\n                  h: \"5\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rounded: \"md\",\n                }}\n              >\n                <activeTeam.logo className={css({ w: \"3\", h: \"3\" })} />\n              </styled.div>\n              <styled.span css={{ truncate: true, fontWeight: \"medium\" }}>\n                {activeTeam.name}\n              </styled.span>\n              <LuChevronDown className={css({ opacity: \"0.5\" })} />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            css={{ w: \"64\", rounded: \"lg\" }}\n            align=\"start\"\n            side=\"bottom\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel css={{ color: \"muted.fg\", textStyle: \"xs\" }}>\n              Teams\n            </DropdownMenuLabel>\n            {teams.map((team, index) => (\n              <DropdownMenuItem\n                key={team.name}\n                onClick={() => setActiveTeam(team)}\n                css={{ gap: \"2\", p: \"2\" }}\n              >\n                <styled.div\n                  css={{\n                    display: \"flex\",\n                    w: \"6\",\n                    h: \"6\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    rounded: \"xs\",\n                    borderWidth: \"1px\",\n                  }}\n                >\n                  <team.logo className={css({ w: \"4\", h: \"4\", flexShrink: \"0\" })} />\n                </styled.div>\n                {team.name}\n                <DropdownMenuShortcut>⌘{index + 1}</DropdownMenuShortcut>\n              </DropdownMenuItem>\n            ))}\n            <DropdownMenuSeparator />\n            <DropdownMenuItem css={{ gap: \"2\", p: \"2\" }}>\n              <styled.div\n                css={{\n                  bg: \"bg\",\n                  display: \"flex\",\n                  w: \"6\",\n                  h: \"6\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rounded: \"md\",\n                  borderWidth: \"1px\",\n                }}\n              >\n                <LuPlus className={css({ w: \"4\", h: \"4\" })} />\n              </styled.div>\n              <styled.div css={{ color: \"muted.fg\", fontWeight: \"medium\" }}>Add team</styled.div>\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n"
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}