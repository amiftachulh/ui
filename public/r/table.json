{
  "name": "table",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/default/ui/table.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { css } from \"styled-system/css\";\nimport { createStyleContext } from \"styled-system/jsx\";\nimport { table } from \"styled-system/recipes\";\n\nconst { withProvider, withContext } = createStyleContext(table);\n\nfunction Root(props: React.ComponentProps<\"table\">) {\n  return (\n    <div className={css({ pos: \"relative\", w: \"full\", overflowX: \"auto\" })}>\n      <table {...props} />\n    </div>\n  );\n}\nconst Table = withProvider(Root, \"root\");\nconst TableHeader = withContext(\"thead\", \"header\");\nconst TableBody = withContext(\"tbody\", \"body\");\nconst TableFooter = withContext(\"tfoot\", \"footer\");\nconst TableRow = withContext(\"tr\", \"row\");\nconst TableHead = withContext(\"th\", \"head\");\nconst TableCell = withContext(\"td\", \"cell\");\nconst TableCaption = withContext(\"caption\", \"caption\");\n\nexport { Table, TableHeader, TableBody, TableFooter, TableRow, TableHead, TableCell, TableCaption };\n"
    },
    {
      "path": "registry/default/slot-recipes/table.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const tableSlotRecipe = defineSlotRecipe({\n  className: \"table\",\n  slots: [\"root\", \"header\", \"body\", \"footer\", \"row\", \"head\", \"cell\", \"caption\"],\n  base: {\n    root: {\n      w: \"full\",\n      captionSide: \"bottom\",\n      textStyle: \"sm\",\n    },\n\n    header: {\n      \"& tr\": {\n        borderBottomWidth: \"1px\",\n      },\n    },\n\n    body: {\n      \"& tr:last-child\": {\n        borderWidth: \"0\",\n      },\n    },\n\n    footer: {\n      borderTop: \"1px\",\n      bg: \"muted/50\",\n      fontWeight: \"medium\",\n      \"& > tr:last-child\": {\n        borderBottomWidth: \"0\",\n      },\n    },\n\n    row: {\n      borderBottomWidth: \"1px\",\n      transition: \"colors\",\n      _hover: {\n        bg: \"muted/50\",\n      },\n      _selected: {\n        bg: \"muted\",\n      },\n    },\n\n    head: {\n      h: \"10\",\n      px: \"2\",\n      textAlign: \"left\",\n      verticalAlign: \"middle\",\n      fontWeight: \"medium\",\n      color: \"fg\",\n      whiteSpace: \"nowrap\",\n      \"&:has([role=checkbox])\": {\n        pr: \"0\",\n      },\n      \"& > [role=checkbox]\": {\n        transform: \"translateY(-2px)\",\n      },\n    },\n\n    cell: {\n      p: \"2\",\n      verticalAlign: \"middle\",\n      whiteSpace: \"nowrap\",\n      \"&:has([role=checkbox])\": {\n        pr: \"0\",\n      },\n      \"& > [role=checkbox]\": {\n        transform: \"translateY(-2px)\",\n      },\n    },\n\n    caption: {\n      mt: \"4\",\n      color: \"muted.fg\",\n      textStyle: \"sm\",\n    },\n  },\n});\n"
    }
  ]
}