{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tabs"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/tabs.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cx } from \"styled-system/css\";\nimport { styled } from \"styled-system/jsx\";\nimport { tabs } from \"styled-system/recipes\";\n\nconst classes = tabs();\n\nfunction Root({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return <TabsPrimitive.Root className={cx(classes.root, className)} {...props} />;\n}\nconst Tabs = styled(Root);\nTabs.displayName = TabsPrimitive.Root.displayName;\n\nfunction List({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return <TabsPrimitive.List className={cx(classes.list, className)} {...props} />;\n}\nconst TabsList = styled(List);\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nfunction Trigger({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return <TabsPrimitive.Trigger className={cx(classes.trigger, className)} {...props} />;\n}\nconst TabsTrigger = styled(Trigger);\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nfunction Content({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return <TabsPrimitive.Content className={cx(classes.content, className)} {...props} />;\n}\nconst TabsContent = styled(Content);\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"
    },
    {
      "path": "src/registry/default/slot-recipes/tabs.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const tabsSlotRecipe = defineSlotRecipe({\n  className: \"tabs\",\n  slots: [\"root\", \"list\", \"trigger\", \"content\"],\n  base: {\n    root: {\n      _vertical: {\n        display: \"flex\",\n      },\n    },\n\n    list: {\n      overflowX: \"auto\",\n      display: \"inline-flex\",\n      color: \"fg\",\n      _horizontal: {\n        w: \"full\",\n        borderBottomWidth: \"1px\",\n      },\n      _vertical: {\n        flexDirection: \"column\",\n        borderRightWidth: \"1px\",\n      },\n    },\n\n    trigger: {\n      display: \"inline-flex\",\n      whiteSpace: \"nowrap\",\n      px: \"3\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      fontWeight: \"medium\",\n      cursor: \"pointer\",\n      outlineColor: \"transparent\",\n      _focusVisible: {\n        outlineWidth: \"2px\",\n        outlineStyle: \"solid\",\n        outlineColor: \"ring\",\n      },\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: 0.5,\n      },\n      _horizontal: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderBottomWidth: \"2px\",\n        borderBottomColor: \"transparent\",\n        \"&[data-state=active]\": {\n          borderBottomColor: \"primary\",\n        },\n      },\n      _vertical: {\n        borderRightWidth: \"2px\",\n        borderRightColor: \"transparent\",\n        \"&[data-state=active]\": {\n          borderRightColor: \"primary\",\n        },\n      },\n    },\n\n    content: {\n      flex: \"1\",\n      outline: \"none\",\n    },\n  },\n});\n"
    }
  ]
}