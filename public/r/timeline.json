{
  "name": "timeline",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/timeline.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { timeline } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(timeline);\n\ntype TimelineContextProps = {\n  orientation: \"horizontal\" | \"vertical\";\n};\n\nconst TimelineContext = React.createContext<TimelineContextProps | null>(null);\n\nfunction useTimeline() {\n  const context = React.useContext(TimelineContext);\n  if (!context) {\n    throw new Error(\"useTimeline must be used within a <Timeline />.\");\n  }\n\n  return context;\n}\n\nfunction Root({\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<\"ol\"> & {\n  orientation?: \"horizontal\" | \"vertical\";\n}) {\n  return (\n    <TimelineContext value={{ orientation }}>\n      <ol role=\"list\" data-orientation={orientation} {...props} />\n    </TimelineContext>\n  );\n}\nconst Timeline = withProvider(Root, \"root\");\n\nfunction Item({\n  asChild,\n  ...props\n}: React.ComponentProps<\"li\"> & {\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"li\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineItem = withContext(Item, \"item\");\n\nfunction Separator({\n  asChild,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineSeparator = withContext(Separator, \"separator\");\n\nfunction Dot({\n  variant = \"default\",\n  asChild,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  variant?: \"default\" | \"outline\";\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} data-variant={variant} {...props} />;\n}\nconst TimelineDot = withContext(Dot, \"dot\");\n\nfunction Connector({\n  asChild,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineConnector = withContext(Connector, \"connector\");\n\nfunction Content({ asChild, ...props }: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineContent = withContext(Content, \"content\");\n\nexport interface TimelineTitleProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction Title({\n  asChild,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineTitle = withContext(Title, \"title\");\n\nfunction Description({\n  asChild,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  asChild?: boolean;\n}) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return <Comp data-orientation={orientation} {...props} />;\n}\nconst TimelineDescription = withContext(Description, \"description\");\n\nexport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n  TimelineContent,\n  TimelineTitle,\n  TimelineDescription,\n  useTimeline,\n};\n"
    },
    {
      "path": "src/registry/default/slot-recipes/timeline.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const timelineSlotRecipe = defineSlotRecipe({\n  className: \"timeline\",\n  slots: [\"root\", \"item\", \"separator\", \"dot\", \"connector\", \"content\", \"title\", \"description\"],\n  base: {\n    root: {\n      display: \"flex\",\n      _vertical: {\n        flexDir: \"column\",\n      },\n    },\n\n    item: {\n      display: \"flex\",\n      gap: \"4\",\n      _horizontal: {\n        flexDir: \"column\",\n      },\n    },\n\n    separator: {\n      display: \"flex\",\n      alignItems: \"center\",\n      _vertical: {\n        flexDir: \"column\",\n      },\n    },\n\n    dot: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      w: \"4\",\n      h: \"4\",\n      _vertical: {\n        mt: \"1\",\n      },\n      _empty: {\n        _after: {\n          content: \"''\",\n          display: \"block\",\n          rounded: \"full\",\n          outlineColor: \"currentColor\",\n        },\n      },\n      \"& svg\": {\n        w: \"4\",\n        h: \"4\",\n      },\n      \"&[data-variant=default]\": {\n        _empty: {\n          _after: {\n            w: \"2.5\",\n            h: \"2.5\",\n            bg: \"current\",\n          },\n        },\n      },\n      \"&[data-variant=outline]\": {\n        _empty: {\n          _after: {\n            w: \"2\",\n            h: \"2\",\n            outlineStyle: \"solid\",\n          },\n        },\n      },\n    },\n\n    connector: {\n      bg: \"border\",\n      flex: \"1\",\n      _vertical: {\n        my: \"2\",\n        w: \"0.5\",\n      },\n      _horizontal: {\n        mx: \"2\",\n        h: \"0.5\",\n      },\n    },\n\n    content: {\n      flex: \"1\",\n      _vertical: {\n        pb: \"7\",\n        _first: {\n          textAlign: \"right\",\n        },\n        _last: {\n          textAlign: \"left\",\n        },\n      },\n      _horizontal: {\n        pr: \"7\",\n      },\n    },\n\n    description: {\n      color: \"muted.fg\",\n      fontSize: \"0.8em\",\n    },\n  },\n});\n"
    }
  ]
}