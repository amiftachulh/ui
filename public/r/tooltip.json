{
  "name": "tooltip",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tooltip"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/tooltip.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\nimport { css } from \"styled-system/css\";\nimport { tooltip } from \"styled-system/recipes\";\nimport { createStyleContext } from \"@/registry/default/lib/create-style-context\";\n\nconst { withRootProvider, withContext } = createStyleContext(tooltip);\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return <TooltipPrimitive.Provider delayDuration={delayDuration} {...props} />;\n}\n\nfunction Root(props: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root {...props} />\n    </TooltipProvider>\n  );\n}\nconst Tooltip = withRootProvider(Root);\nconst TooltipTrigger = withContext(TooltipPrimitive.Trigger, \"trigger\");\n\nfunction Content({\n  children,\n  sideOffset = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content sideOffset={sideOffset} {...props}>\n        {children}\n        <TooltipPrimitive.Arrow\n          className={css({\n            bg: \"primary\",\n            fill: \"primary\",\n            zIndex: \"50\",\n            w: \"2.5\",\n            h: \"2.5\",\n            transform: \"translateY(calc(-50% - 2px)) rotate(45deg)\",\n            rounded: \"2px\",\n          })}\n        />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  );\n}\nconst TooltipContent = withContext(Content, \"content\");\n\nexport { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent };\n"
    },
    {
      "path": "src/registry/default/slot-recipes/tooltip.ts",
      "type": "registry:slot-recipe",
      "content": "import { defineSlotRecipe } from \"@pandacss/dev\";\n\nexport const tooltipSlotRecipe = defineSlotRecipe({\n  className: \"tooltip\",\n  slots: [\"trigger\", \"content\"],\n  base: {\n    content: {\n      zIndex: \"50\",\n      overflow: \"hidden\",\n      w: \"fit\",\n      px: \"3\",\n      py: \"1.5\",\n      bg: \"primary\",\n      color: \"primary.fg\",\n      textStyle: \"xs\",\n      textWrap: \"balance\",\n      rounded: \"md\",\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      transformOrigin: \"var(--radix-tooltip-content-transform-origin)\",\n      animateIn: true,\n      fadeIn: \"0\",\n      zoomIn: \"95\",\n      _closed: {\n        animateOut: true,\n        fadeOut: \"0\",\n        zoomOut: \"95\",\n      },\n      \"&[data-side=top]\": {\n        slideInFromBottom: \"2\",\n      },\n      \"&[data-side=bottom]\": {\n        slideInFromTop: \"2\",\n      },\n      \"&[data-side=left]\": {\n        slideInFromRight: \"2\",\n      },\n      \"&[data-side=right]\": {\n        slideInFromLeft: \"2\",\n      },\n    },\n  },\n});\n"
    }
  ]
}